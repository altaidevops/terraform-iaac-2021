digraph {
	compound = "true"
	newrank = "true"
	subgraph "root" {
		"[root] aws_autoscaling_attachment.asg_attachment_bar (expand)" [label = "aws_autoscaling_attachment.asg_attachment_bar", shape = "box"]
		"[root] aws_route53_record.blog (expand)" [label = "aws_route53_record.blog", shape = "box"]
		"[root] aws_route53_record.reader1 (expand)" [label = "aws_route53_record.reader1", shape = "box"]
		"[root] aws_route53_record.writer (expand)" [label = "aws_route53_record.writer", shape = "box"]
		"[root] data.aws_ami.amazon (expand)" [label = "data.aws_ami.amazon", shape = "box"]
		"[root] data.aws_availability_zones.available (expand)" [label = "data.aws_availability_zones.available", shape = "box"]
		"[root] module.cluster.aws_appautoscaling_policy.this (expand)" [label = "module.cluster.aws_appautoscaling_policy.this", shape = "box"]
		"[root] module.cluster.aws_appautoscaling_target.this (expand)" [label = "module.cluster.aws_appautoscaling_target.this", shape = "box"]
		"[root] module.cluster.aws_db_subnet_group.this (expand)" [label = "module.cluster.aws_db_subnet_group.this", shape = "box"]
		"[root] module.cluster.aws_iam_role.rds_enhanced_monitoring (expand)" [label = "module.cluster.aws_iam_role.rds_enhanced_monitoring", shape = "box"]
		"[root] module.cluster.aws_iam_role_policy_attachment.rds_enhanced_monitoring (expand)" [label = "module.cluster.aws_iam_role_policy_attachment.rds_enhanced_monitoring", shape = "box"]
		"[root] module.cluster.aws_rds_cluster.this (expand)" [label = "module.cluster.aws_rds_cluster.this", shape = "box"]
		"[root] module.cluster.aws_rds_cluster_endpoint.this (expand)" [label = "module.cluster.aws_rds_cluster_endpoint.this", shape = "box"]
		"[root] module.cluster.aws_rds_cluster_instance.this (expand)" [label = "module.cluster.aws_rds_cluster_instance.this", shape = "box"]
		"[root] module.cluster.aws_rds_cluster_role_association.this (expand)" [label = "module.cluster.aws_rds_cluster_role_association.this", shape = "box"]
		"[root] module.cluster.aws_security_group.this (expand)" [label = "module.cluster.aws_security_group.this", shape = "box"]
		"[root] module.cluster.aws_security_group_rule.cidr_ingress (expand)" [label = "module.cluster.aws_security_group_rule.cidr_ingress", shape = "box"]
		"[root] module.cluster.aws_security_group_rule.default_ingress (expand)" [label = "module.cluster.aws_security_group_rule.default_ingress", shape = "box"]
		"[root] module.cluster.aws_security_group_rule.egress (expand)" [label = "module.cluster.aws_security_group_rule.egress", shape = "box"]
		"[root] module.cluster.data.aws_iam_policy_document.monitoring_rds_assume_role (expand)" [label = "module.cluster.data.aws_iam_policy_document.monitoring_rds_assume_role", shape = "box"]
		"[root] module.cluster.data.aws_partition.current (expand)" [label = "module.cluster.data.aws_partition.current", shape = "box"]
		"[root] module.cluster.random_id.snapshot_identifier (expand)" [label = "module.cluster.random_id.snapshot_identifier", shape = "box"]
		"[root] module.cluster.random_password.master_password (expand)" [label = "module.cluster.random_password.master_password", shape = "box"]
		"[root] module.elb_http.module.elb.aws_elb.this (expand)" [label = "module.elb_http.module.elb.aws_elb.this", shape = "box"]
		"[root] module.elb_http.module.elb_attachment.aws_elb_attachment.this (expand)" [label = "module.elb_http.module.elb_attachment.aws_elb_attachment.this", shape = "box"]
		"[root] module.redis.aws_elasticache_parameter_group.redis (expand)" [label = "module.redis.aws_elasticache_parameter_group.redis", shape = "box"]
		"[root] module.redis.aws_elasticache_replication_group.redis (expand)" [label = "module.redis.aws_elasticache_replication_group.redis", shape = "box"]
		"[root] module.redis.aws_elasticache_subnet_group.redis (expand)" [label = "module.redis.aws_elasticache_subnet_group.redis", shape = "box"]
		"[root] module.redis.aws_security_group.redis (expand)" [label = "module.redis.aws_security_group.redis", shape = "box"]
		"[root] module.redis.aws_security_group_rule.redis_egress (expand)" [label = "module.redis.aws_security_group_rule.redis_egress", shape = "box"]
		"[root] module.redis.aws_security_group_rule.redis_ingress_cidr_blocks (expand)" [label = "module.redis.aws_security_group_rule.redis_ingress_cidr_blocks", shape = "box"]
		"[root] module.redis.aws_security_group_rule.redis_ingress_self (expand)" [label = "module.redis.aws_security_group_rule.redis_ingress_self", shape = "box"]
		"[root] module.redis.random_id.redis_pg (expand)" [label = "module.redis.random_id.redis_pg", shape = "box"]
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" [label = "module.vpc.aws_cloudwatch_log_group.flow_log", shape = "box"]
		"[root] module.vpc.aws_customer_gateway.this (expand)" [label = "module.vpc.aws_customer_gateway.this", shape = "box"]
		"[root] module.vpc.aws_db_subnet_group.database (expand)" [label = "module.vpc.aws_db_subnet_group.database", shape = "box"]
		"[root] module.vpc.aws_default_network_acl.this (expand)" [label = "module.vpc.aws_default_network_acl.this", shape = "box"]
		"[root] module.vpc.aws_default_route_table.default (expand)" [label = "module.vpc.aws_default_route_table.default", shape = "box"]
		"[root] module.vpc.aws_default_security_group.this (expand)" [label = "module.vpc.aws_default_security_group.this", shape = "box"]
		"[root] module.vpc.aws_default_vpc.this (expand)" [label = "module.vpc.aws_default_vpc.this", shape = "box"]
		"[root] module.vpc.aws_egress_only_internet_gateway.this (expand)" [label = "module.vpc.aws_egress_only_internet_gateway.this", shape = "box"]
		"[root] module.vpc.aws_eip.nat (expand)" [label = "module.vpc.aws_eip.nat", shape = "box"]
		"[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)" [label = "module.vpc.aws_elasticache_subnet_group.elasticache", shape = "box"]
		"[root] module.vpc.aws_flow_log.this (expand)" [label = "module.vpc.aws_flow_log.this", shape = "box"]
		"[root] module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch (expand)" [label = "module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch", shape = "box"]
		"[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)" [label = "module.vpc.aws_iam_role.vpc_flow_log_cloudwatch", shape = "box"]
		"[root] module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch (expand)" [label = "module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch", shape = "box"]
		"[root] module.vpc.aws_internet_gateway.this (expand)" [label = "module.vpc.aws_internet_gateway.this", shape = "box"]
		"[root] module.vpc.aws_nat_gateway.this (expand)" [label = "module.vpc.aws_nat_gateway.this", shape = "box"]
		"[root] module.vpc.aws_network_acl.database (expand)" [label = "module.vpc.aws_network_acl.database", shape = "box"]
		"[root] module.vpc.aws_network_acl.elasticache (expand)" [label = "module.vpc.aws_network_acl.elasticache", shape = "box"]
		"[root] module.vpc.aws_network_acl.intra (expand)" [label = "module.vpc.aws_network_acl.intra", shape = "box"]
		"[root] module.vpc.aws_network_acl.outpost (expand)" [label = "module.vpc.aws_network_acl.outpost", shape = "box"]
		"[root] module.vpc.aws_network_acl.private (expand)" [label = "module.vpc.aws_network_acl.private", shape = "box"]
		"[root] module.vpc.aws_network_acl.public (expand)" [label = "module.vpc.aws_network_acl.public", shape = "box"]
		"[root] module.vpc.aws_network_acl.redshift (expand)" [label = "module.vpc.aws_network_acl.redshift", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.database_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.database_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.database_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.database_outbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.elasticache_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.elasticache_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.elasticache_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.elasticache_outbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.intra_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.intra_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.intra_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.intra_outbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.outpost_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.outpost_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.outpost_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.outpost_outbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.private_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.private_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.private_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.private_outbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.public_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.public_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.public_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.public_outbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.redshift_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.redshift_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.redshift_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.redshift_outbound", shape = "box"]
		"[root] module.vpc.aws_redshift_subnet_group.redshift (expand)" [label = "module.vpc.aws_redshift_subnet_group.redshift", shape = "box"]
		"[root] module.vpc.aws_route.database_internet_gateway (expand)" [label = "module.vpc.aws_route.database_internet_gateway", shape = "box"]
		"[root] module.vpc.aws_route.database_ipv6_egress (expand)" [label = "module.vpc.aws_route.database_ipv6_egress", shape = "box"]
		"[root] module.vpc.aws_route.database_nat_gateway (expand)" [label = "module.vpc.aws_route.database_nat_gateway", shape = "box"]
		"[root] module.vpc.aws_route.private_ipv6_egress (expand)" [label = "module.vpc.aws_route.private_ipv6_egress", shape = "box"]
		"[root] module.vpc.aws_route.private_nat_gateway (expand)" [label = "module.vpc.aws_route.private_nat_gateway", shape = "box"]
		"[root] module.vpc.aws_route.public_internet_gateway (expand)" [label = "module.vpc.aws_route.public_internet_gateway", shape = "box"]
		"[root] module.vpc.aws_route.public_internet_gateway_ipv6 (expand)" [label = "module.vpc.aws_route.public_internet_gateway_ipv6", shape = "box"]
		"[root] module.vpc.aws_route_table.database (expand)" [label = "module.vpc.aws_route_table.database", shape = "box"]
		"[root] module.vpc.aws_route_table.elasticache (expand)" [label = "module.vpc.aws_route_table.elasticache", shape = "box"]
		"[root] module.vpc.aws_route_table.intra (expand)" [label = "module.vpc.aws_route_table.intra", shape = "box"]
		"[root] module.vpc.aws_route_table.private (expand)" [label = "module.vpc.aws_route_table.private", shape = "box"]
		"[root] module.vpc.aws_route_table.public (expand)" [label = "module.vpc.aws_route_table.public", shape = "box"]
		"[root] module.vpc.aws_route_table.redshift (expand)" [label = "module.vpc.aws_route_table.redshift", shape = "box"]
		"[root] module.vpc.aws_route_table_association.database (expand)" [label = "module.vpc.aws_route_table_association.database", shape = "box"]
		"[root] module.vpc.aws_route_table_association.elasticache (expand)" [label = "module.vpc.aws_route_table_association.elasticache", shape = "box"]
		"[root] module.vpc.aws_route_table_association.intra (expand)" [label = "module.vpc.aws_route_table_association.intra", shape = "box"]
		"[root] module.vpc.aws_route_table_association.outpost (expand)" [label = "module.vpc.aws_route_table_association.outpost", shape = "box"]
		"[root] module.vpc.aws_route_table_association.private (expand)" [label = "module.vpc.aws_route_table_association.private", shape = "box"]
		"[root] module.vpc.aws_route_table_association.public (expand)" [label = "module.vpc.aws_route_table_association.public", shape = "box"]
		"[root] module.vpc.aws_route_table_association.redshift (expand)" [label = "module.vpc.aws_route_table_association.redshift", shape = "box"]
		"[root] module.vpc.aws_route_table_association.redshift_public (expand)" [label = "module.vpc.aws_route_table_association.redshift_public", shape = "box"]
		"[root] module.vpc.aws_subnet.database (expand)" [label = "module.vpc.aws_subnet.database", shape = "box"]
		"[root] module.vpc.aws_subnet.elasticache (expand)" [label = "module.vpc.aws_subnet.elasticache", shape = "box"]
		"[root] module.vpc.aws_subnet.intra (expand)" [label = "module.vpc.aws_subnet.intra", shape = "box"]
		"[root] module.vpc.aws_subnet.outpost (expand)" [label = "module.vpc.aws_subnet.outpost", shape = "box"]
		"[root] module.vpc.aws_subnet.private (expand)" [label = "module.vpc.aws_subnet.private", shape = "box"]
		"[root] module.vpc.aws_subnet.public (expand)" [label = "module.vpc.aws_subnet.public", shape = "box"]
		"[root] module.vpc.aws_subnet.redshift (expand)" [label = "module.vpc.aws_subnet.redshift", shape = "box"]
		"[root] module.vpc.aws_vpc.this (expand)" [label = "module.vpc.aws_vpc.this", shape = "box"]
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" [label = "module.vpc.aws_vpc_dhcp_options.this", shape = "box"]
		"[root] module.vpc.aws_vpc_dhcp_options_association.this (expand)" [label = "module.vpc.aws_vpc_dhcp_options_association.this", shape = "box"]
		"[root] module.vpc.aws_vpc_ipv4_cidr_block_association.this (expand)" [label = "module.vpc.aws_vpc_ipv4_cidr_block_association.this", shape = "box"]
		"[root] module.vpc.aws_vpn_gateway.this (expand)" [label = "module.vpc.aws_vpn_gateway.this", shape = "box"]
		"[root] module.vpc.aws_vpn_gateway_attachment.this (expand)" [label = "module.vpc.aws_vpn_gateway_attachment.this", shape = "box"]
		"[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)" [label = "module.vpc.aws_vpn_gateway_route_propagation.intra", shape = "box"]
		"[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)" [label = "module.vpc.aws_vpn_gateway_route_propagation.private", shape = "box"]
		"[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)" [label = "module.vpc.aws_vpn_gateway_route_propagation.public", shape = "box"]
		"[root] module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role (expand)" [label = "module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role", shape = "box"]
		"[root] module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch (expand)" [label = "module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch", shape = "box"]
		"[root] module.wordpress-asg.aws_autoscaling_group.this (expand)" [label = "module.wordpress-asg.aws_autoscaling_group.this", shape = "box"]
		"[root] module.wordpress-asg.aws_autoscaling_schedule.this (expand)" [label = "module.wordpress-asg.aws_autoscaling_schedule.this", shape = "box"]
		"[root] module.wordpress-asg.aws_launch_configuration.this (expand)" [label = "module.wordpress-asg.aws_launch_configuration.this", shape = "box"]
		"[root] module.wordpress-asg.aws_launch_template.this (expand)" [label = "module.wordpress-asg.aws_launch_template.this", shape = "box"]
		"[root] module.wordpress-asg.null_resource.tags_as_list_of_maps (expand)" [label = "module.wordpress-asg.null_resource.tags_as_list_of_maps", shape = "box"]
		"[root] module.wordpress.aws_security_group.this (expand)" [label = "module.wordpress.aws_security_group.this", shape = "box"]
		"[root] module.wordpress.aws_security_group.this_name_prefix (expand)" [label = "module.wordpress.aws_security_group.this_name_prefix", shape = "box"]
		"[root] module.wordpress.aws_security_group_rule.computed_egress_rules (expand)" [label = "module.wordpress.aws_security_group_rule.computed_egress_rules", shape = "box"]
		"[root] module.wordpress.aws_security_group_rule.computed_egress_with_cidr_blocks (expand)" [label = "module.wordpress.aws_security_group_rule.computed_egress_with_cidr_blocks", shape = "box"]
		"[root] module.wordpress.aws_security_group_rule.computed_egress_with_ipv6_cidr_blocks (expand)" [label = "module.wordpress.aws_security_group_rule.computed_egress_with_ipv6_cidr_blocks", shape = "box"]
		"[root] module.wordpress.aws_security_group_rule.computed_egress_with_self (expand)" [label = "module.wordpress.aws_security_group_rule.computed_egress_with_self", shape = "box"]
		"[root] module.wordpress.aws_security_group_rule.computed_egress_with_source_security_group_id (expand)" [label = "module.wordpress.aws_security_group_rule.computed_egress_with_source_security_group_id", shape = "box"]
		"[root] module.wordpress.aws_security_group_rule.computed_ingress_rules (expand)" [label = "module.wordpress.aws_security_group_rule.computed_ingress_rules", shape = "box"]
		"[root] module.wordpress.aws_security_group_rule.computed_ingress_with_cidr_blocks (expand)" [label = "module.wordpress.aws_security_group_rule.computed_ingress_with_cidr_blocks", shape = "box"]
		"[root] module.wordpress.aws_security_group_rule.computed_ingress_with_ipv6_cidr_blocks (expand)" [label = "module.wordpress.aws_security_group_rule.computed_ingress_with_ipv6_cidr_blocks", shape = "box"]
		"[root] module.wordpress.aws_security_group_rule.computed_ingress_with_self (expand)" [label = "module.wordpress.aws_security_group_rule.computed_ingress_with_self", shape = "box"]
		"[root] module.wordpress.aws_security_group_rule.computed_ingress_with_source_security_group_id (expand)" [label = "module.wordpress.aws_security_group_rule.computed_ingress_with_source_security_group_id", shape = "box"]
		"[root] module.wordpress.aws_security_group_rule.egress_rules (expand)" [label = "module.wordpress.aws_security_group_rule.egress_rules", shape = "box"]
		"[root] module.wordpress.aws_security_group_rule.egress_with_cidr_blocks (expand)" [label = "module.wordpress.aws_security_group_rule.egress_with_cidr_blocks", shape = "box"]
		"[root] module.wordpress.aws_security_group_rule.egress_with_ipv6_cidr_blocks (expand)" [label = "module.wordpress.aws_security_group_rule.egress_with_ipv6_cidr_blocks", shape = "box"]
		"[root] module.wordpress.aws_security_group_rule.egress_with_self (expand)" [label = "module.wordpress.aws_security_group_rule.egress_with_self", shape = "box"]
		"[root] module.wordpress.aws_security_group_rule.egress_with_source_security_group_id (expand)" [label = "module.wordpress.aws_security_group_rule.egress_with_source_security_group_id", shape = "box"]
		"[root] module.wordpress.aws_security_group_rule.ingress_rules (expand)" [label = "module.wordpress.aws_security_group_rule.ingress_rules", shape = "box"]
		"[root] module.wordpress.aws_security_group_rule.ingress_with_cidr_blocks (expand)" [label = "module.wordpress.aws_security_group_rule.ingress_with_cidr_blocks", shape = "box"]
		"[root] module.wordpress.aws_security_group_rule.ingress_with_ipv6_cidr_blocks (expand)" [label = "module.wordpress.aws_security_group_rule.ingress_with_ipv6_cidr_blocks", shape = "box"]
		"[root] module.wordpress.aws_security_group_rule.ingress_with_self (expand)" [label = "module.wordpress.aws_security_group_rule.ingress_with_self", shape = "box"]
		"[root] module.wordpress.aws_security_group_rule.ingress_with_source_security_group_id (expand)" [label = "module.wordpress.aws_security_group_rule.ingress_with_source_security_group_id", shape = "box"]
		"[root] output.ami_id" [label = "output.ami_id", shape = "note"]
		"[root] output.elb" [label = "output.elb", shape = "note"]
		"[root] output.private_subnets" [label = "output.private_subnets", shape = "note"]
		"[root] output.public_subnets" [label = "output.public_subnets", shape = "note"]
		"[root] output.reader" [label = "output.reader", shape = "note"]
		"[root] output.security_group_id" [label = "output.security_group_id", shape = "note"]
		"[root] output.vpc_id" [label = "output.vpc_id", shape = "note"]
		"[root] output.writer" [label = "output.writer", shape = "note"]
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"]" [label = "provider[\"registry.terraform.io/hashicorp/aws\"]", shape = "diamond"]
		"[root] provider[\"registry.terraform.io/hashicorp/null\"]" [label = "provider[\"registry.terraform.io/hashicorp/null\"]", shape = "diamond"]
		"[root] provider[\"registry.terraform.io/hashicorp/random\"]" [label = "provider[\"registry.terraform.io/hashicorp/random\"]", shape = "diamond"]
		"[root] var.private_subnet1" [label = "var.private_subnet1", shape = "note"]
		"[root] var.private_subnet2" [label = "var.private_subnet2", shape = "note"]
		"[root] var.private_subnet3" [label = "var.private_subnet3", shape = "note"]
		"[root] var.public_subnet1" [label = "var.public_subnet1", shape = "note"]
		"[root] var.public_subnet2" [label = "var.public_subnet2", shape = "note"]
		"[root] var.public_subnet3" [label = "var.public_subnet3", shape = "note"]
		"[root] var.region" [label = "var.region", shape = "note"]
		"[root] var.tags" [label = "var.tags", shape = "note"]
		"[root] var.vpc_cidr" [label = "var.vpc_cidr", shape = "note"]
		"[root] var.vpc_name" [label = "var.vpc_name", shape = "note"]
		"[root] aws_autoscaling_attachment.asg_attachment_bar (expand)" -> "[root] module.elb_http.output.this_elb_id (expand)"
		"[root] aws_autoscaling_attachment.asg_attachment_bar (expand)" -> "[root] module.wordpress-asg.output.autoscaling_group_id (expand)"
		"[root] aws_route53_record.blog (expand)" -> "[root] module.elb_http.output.this_elb_dns_name (expand)"
		"[root] aws_route53_record.reader1 (expand)" -> "[root] module.cluster.output.cluster_reader_endpoint (expand)"
		"[root] aws_route53_record.writer (expand)" -> "[root] module.cluster.output.cluster_endpoint (expand)"
		"[root] data.aws_ami.amazon (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] data.aws_availability_zones.available (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_autoscaling_attachment.asg_attachment_bar (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_route53_record.blog (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_route53_record.reader1 (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_route53_record.writer (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.cluster (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.redis (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.vpc (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.wordpress (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.wordpress-asg (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.ami_id"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.elb"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.private_subnets"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.public_subnets"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.reader"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.security_group_id"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.vpc_id"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.writer"
		"[root] module.cluster (close)" -> "[root] module.cluster.aws_appautoscaling_policy.this (expand)"
		"[root] module.cluster (close)" -> "[root] module.cluster.aws_iam_role_policy_attachment.rds_enhanced_monitoring (expand)"
		"[root] module.cluster (close)" -> "[root] module.cluster.aws_security_group_rule.cidr_ingress (expand)"
		"[root] module.cluster (close)" -> "[root] module.cluster.aws_security_group_rule.default_ingress (expand)"
		"[root] module.cluster (close)" -> "[root] module.cluster.aws_security_group_rule.egress (expand)"
		"[root] module.cluster (close)" -> "[root] module.cluster.output.additional_cluster_endpoints (expand)"
		"[root] module.cluster (close)" -> "[root] module.cluster.output.cluster_arn (expand)"
		"[root] module.cluster (close)" -> "[root] module.cluster.output.cluster_database_name (expand)"
		"[root] module.cluster (close)" -> "[root] module.cluster.output.cluster_endpoint (expand)"
		"[root] module.cluster (close)" -> "[root] module.cluster.output.cluster_engine_version_actual (expand)"
		"[root] module.cluster (close)" -> "[root] module.cluster.output.cluster_hosted_zone_id (expand)"
		"[root] module.cluster (close)" -> "[root] module.cluster.output.cluster_id (expand)"
		"[root] module.cluster (close)" -> "[root] module.cluster.output.cluster_instances (expand)"
		"[root] module.cluster (close)" -> "[root] module.cluster.output.cluster_master_password (expand)"
		"[root] module.cluster (close)" -> "[root] module.cluster.output.cluster_master_username (expand)"
		"[root] module.cluster (close)" -> "[root] module.cluster.output.cluster_members (expand)"
		"[root] module.cluster (close)" -> "[root] module.cluster.output.cluster_port (expand)"
		"[root] module.cluster (close)" -> "[root] module.cluster.output.cluster_reader_endpoint (expand)"
		"[root] module.cluster (close)" -> "[root] module.cluster.output.cluster_resource_id (expand)"
		"[root] module.cluster (close)" -> "[root] module.cluster.output.cluster_role_associations (expand)"
		"[root] module.cluster (close)" -> "[root] module.cluster.output.db_subnet_group_name (expand)"
		"[root] module.cluster (close)" -> "[root] module.cluster.output.enhanced_monitoring_iam_role_arn (expand)"
		"[root] module.cluster (close)" -> "[root] module.cluster.output.enhanced_monitoring_iam_role_name (expand)"
		"[root] module.cluster (close)" -> "[root] module.cluster.output.enhanced_monitoring_iam_role_unique_id (expand)"
		"[root] module.cluster (close)" -> "[root] module.cluster.output.security_group_id (expand)"
		"[root] module.cluster.aws_appautoscaling_policy.this (expand)" -> "[root] module.cluster.aws_appautoscaling_target.this (expand)"
		"[root] module.cluster.aws_appautoscaling_policy.this (expand)" -> "[root] module.cluster.var.autoscaling_scale_in_cooldown (expand)"
		"[root] module.cluster.aws_appautoscaling_policy.this (expand)" -> "[root] module.cluster.var.autoscaling_scale_out_cooldown (expand)"
		"[root] module.cluster.aws_appautoscaling_policy.this (expand)" -> "[root] module.cluster.var.autoscaling_target_connections (expand)"
		"[root] module.cluster.aws_appautoscaling_policy.this (expand)" -> "[root] module.cluster.var.autoscaling_target_cpu (expand)"
		"[root] module.cluster.aws_appautoscaling_policy.this (expand)" -> "[root] module.cluster.var.predefined_metric_type (expand)"
		"[root] module.cluster.aws_appautoscaling_target.this (expand)" -> "[root] module.cluster.aws_rds_cluster.this (expand)"
		"[root] module.cluster.aws_appautoscaling_target.this (expand)" -> "[root] module.cluster.var.autoscaling_enabled (expand)"
		"[root] module.cluster.aws_appautoscaling_target.this (expand)" -> "[root] module.cluster.var.autoscaling_max_capacity (expand)"
		"[root] module.cluster.aws_appautoscaling_target.this (expand)" -> "[root] module.cluster.var.autoscaling_min_capacity (expand)"
		"[root] module.cluster.aws_db_subnet_group.this (expand)" -> "[root] module.cluster.local.internal_db_subnet_group_name (expand)"
		"[root] module.cluster.aws_db_subnet_group.this (expand)" -> "[root] module.cluster.var.create_cluster (expand)"
		"[root] module.cluster.aws_db_subnet_group.this (expand)" -> "[root] module.cluster.var.create_db_subnet_group (expand)"
		"[root] module.cluster.aws_db_subnet_group.this (expand)" -> "[root] module.cluster.var.subnets (expand)"
		"[root] module.cluster.aws_db_subnet_group.this (expand)" -> "[root] module.cluster.var.tags (expand)"
		"[root] module.cluster.aws_iam_role.rds_enhanced_monitoring (expand)" -> "[root] module.cluster.data.aws_iam_policy_document.monitoring_rds_assume_role (expand)"
		"[root] module.cluster.aws_iam_role.rds_enhanced_monitoring (expand)" -> "[root] module.cluster.var.create_cluster (expand)"
		"[root] module.cluster.aws_iam_role.rds_enhanced_monitoring (expand)" -> "[root] module.cluster.var.create_monitoring_role (expand)"
		"[root] module.cluster.aws_iam_role.rds_enhanced_monitoring (expand)" -> "[root] module.cluster.var.iam_role_description (expand)"
		"[root] module.cluster.aws_iam_role.rds_enhanced_monitoring (expand)" -> "[root] module.cluster.var.iam_role_force_detach_policies (expand)"
		"[root] module.cluster.aws_iam_role.rds_enhanced_monitoring (expand)" -> "[root] module.cluster.var.iam_role_managed_policy_arns (expand)"
		"[root] module.cluster.aws_iam_role.rds_enhanced_monitoring (expand)" -> "[root] module.cluster.var.iam_role_max_session_duration (expand)"
		"[root] module.cluster.aws_iam_role.rds_enhanced_monitoring (expand)" -> "[root] module.cluster.var.iam_role_name (expand)"
		"[root] module.cluster.aws_iam_role.rds_enhanced_monitoring (expand)" -> "[root] module.cluster.var.iam_role_path (expand)"
		"[root] module.cluster.aws_iam_role.rds_enhanced_monitoring (expand)" -> "[root] module.cluster.var.iam_role_permissions_boundary (expand)"
		"[root] module.cluster.aws_iam_role.rds_enhanced_monitoring (expand)" -> "[root] module.cluster.var.iam_role_use_name_prefix (expand)"
		"[root] module.cluster.aws_iam_role.rds_enhanced_monitoring (expand)" -> "[root] module.cluster.var.monitoring_interval (expand)"
		"[root] module.cluster.aws_iam_role.rds_enhanced_monitoring (expand)" -> "[root] module.cluster.var.tags (expand)"
		"[root] module.cluster.aws_iam_role_policy_attachment.rds_enhanced_monitoring (expand)" -> "[root] module.cluster.aws_iam_role.rds_enhanced_monitoring (expand)"
		"[root] module.cluster.aws_iam_role_policy_attachment.rds_enhanced_monitoring (expand)" -> "[root] module.cluster.data.aws_partition.current (expand)"
		"[root] module.cluster.aws_rds_cluster.this (expand)" -> "[root] module.cluster.aws_security_group.this (expand)"
		"[root] module.cluster.aws_rds_cluster.this (expand)" -> "[root] module.cluster.local.backtrack_window (expand)"
		"[root] module.cluster.aws_rds_cluster.this (expand)" -> "[root] module.cluster.local.db_subnet_group_name (expand)"
		"[root] module.cluster.aws_rds_cluster.this (expand)" -> "[root] module.cluster.local.is_serverless (expand)"
		"[root] module.cluster.aws_rds_cluster.this (expand)" -> "[root] module.cluster.local.master_password (expand)"
		"[root] module.cluster.aws_rds_cluster.this (expand)" -> "[root] module.cluster.local.port (expand)"
		"[root] module.cluster.aws_rds_cluster.this (expand)" -> "[root] module.cluster.random_id.snapshot_identifier (expand)"
		"[root] module.cluster.aws_rds_cluster.this (expand)" -> "[root] module.cluster.var.allow_major_version_upgrade (expand)"
		"[root] module.cluster.aws_rds_cluster.this (expand)" -> "[root] module.cluster.var.apply_immediately (expand)"
		"[root] module.cluster.aws_rds_cluster.this (expand)" -> "[root] module.cluster.var.backup_retention_period (expand)"
		"[root] module.cluster.aws_rds_cluster.this (expand)" -> "[root] module.cluster.var.cluster_tags (expand)"
		"[root] module.cluster.aws_rds_cluster.this (expand)" -> "[root] module.cluster.var.cluster_timeouts (expand)"
		"[root] module.cluster.aws_rds_cluster.this (expand)" -> "[root] module.cluster.var.copy_tags_to_snapshot (expand)"
		"[root] module.cluster.aws_rds_cluster.this (expand)" -> "[root] module.cluster.var.database_name (expand)"
		"[root] module.cluster.aws_rds_cluster.this (expand)" -> "[root] module.cluster.var.db_cluster_db_instance_parameter_group_name (expand)"
		"[root] module.cluster.aws_rds_cluster.this (expand)" -> "[root] module.cluster.var.db_cluster_parameter_group_name (expand)"
		"[root] module.cluster.aws_rds_cluster.this (expand)" -> "[root] module.cluster.var.deletion_protection (expand)"
		"[root] module.cluster.aws_rds_cluster.this (expand)" -> "[root] module.cluster.var.enable_global_write_forwarding (expand)"
		"[root] module.cluster.aws_rds_cluster.this (expand)" -> "[root] module.cluster.var.enable_http_endpoint (expand)"
		"[root] module.cluster.aws_rds_cluster.this (expand)" -> "[root] module.cluster.var.enabled_cloudwatch_logs_exports (expand)"
		"[root] module.cluster.aws_rds_cluster.this (expand)" -> "[root] module.cluster.var.engine_version (expand)"
		"[root] module.cluster.aws_rds_cluster.this (expand)" -> "[root] module.cluster.var.final_snapshot_identifier_prefix (expand)"
		"[root] module.cluster.aws_rds_cluster.this (expand)" -> "[root] module.cluster.var.global_cluster_identifier (expand)"
		"[root] module.cluster.aws_rds_cluster.this (expand)" -> "[root] module.cluster.var.iam_database_authentication_enabled (expand)"
		"[root] module.cluster.aws_rds_cluster.this (expand)" -> "[root] module.cluster.var.is_primary_cluster (expand)"
		"[root] module.cluster.aws_rds_cluster.this (expand)" -> "[root] module.cluster.var.kms_key_id (expand)"
		"[root] module.cluster.aws_rds_cluster.this (expand)" -> "[root] module.cluster.var.master_username (expand)"
		"[root] module.cluster.aws_rds_cluster.this (expand)" -> "[root] module.cluster.var.preferred_backup_window (expand)"
		"[root] module.cluster.aws_rds_cluster.this (expand)" -> "[root] module.cluster.var.preferred_maintenance_window (expand)"
		"[root] module.cluster.aws_rds_cluster.this (expand)" -> "[root] module.cluster.var.replication_source_identifier (expand)"
		"[root] module.cluster.aws_rds_cluster.this (expand)" -> "[root] module.cluster.var.restore_to_point_in_time (expand)"
		"[root] module.cluster.aws_rds_cluster.this (expand)" -> "[root] module.cluster.var.s3_import (expand)"
		"[root] module.cluster.aws_rds_cluster.this (expand)" -> "[root] module.cluster.var.scaling_configuration (expand)"
		"[root] module.cluster.aws_rds_cluster.this (expand)" -> "[root] module.cluster.var.skip_final_snapshot (expand)"
		"[root] module.cluster.aws_rds_cluster.this (expand)" -> "[root] module.cluster.var.snapshot_identifier (expand)"
		"[root] module.cluster.aws_rds_cluster.this (expand)" -> "[root] module.cluster.var.source_region (expand)"
		"[root] module.cluster.aws_rds_cluster.this (expand)" -> "[root] module.cluster.var.storage_encrypted (expand)"
		"[root] module.cluster.aws_rds_cluster.this (expand)" -> "[root] module.cluster.var.vpc_security_group_ids (expand)"
		"[root] module.cluster.aws_rds_cluster_endpoint.this (expand)" -> "[root] module.cluster.aws_rds_cluster_instance.this (expand)"
		"[root] module.cluster.aws_rds_cluster_endpoint.this (expand)" -> "[root] module.cluster.var.endpoints (expand)"
		"[root] module.cluster.aws_rds_cluster_instance.this (expand)" -> "[root] module.cluster.aws_rds_cluster.this (expand)"
		"[root] module.cluster.aws_rds_cluster_instance.this (expand)" -> "[root] module.cluster.local.rds_enhanced_monitoring_arn (expand)"
		"[root] module.cluster.aws_rds_cluster_instance.this (expand)" -> "[root] module.cluster.var.auto_minor_version_upgrade (expand)"
		"[root] module.cluster.aws_rds_cluster_instance.this (expand)" -> "[root] module.cluster.var.ca_cert_identifier (expand)"
		"[root] module.cluster.aws_rds_cluster_instance.this (expand)" -> "[root] module.cluster.var.db_parameter_group_name (expand)"
		"[root] module.cluster.aws_rds_cluster_instance.this (expand)" -> "[root] module.cluster.var.instance_class (expand)"
		"[root] module.cluster.aws_rds_cluster_instance.this (expand)" -> "[root] module.cluster.var.instance_timeouts (expand)"
		"[root] module.cluster.aws_rds_cluster_instance.this (expand)" -> "[root] module.cluster.var.instances (expand)"
		"[root] module.cluster.aws_rds_cluster_instance.this (expand)" -> "[root] module.cluster.var.instances_use_identifier_prefix (expand)"
		"[root] module.cluster.aws_rds_cluster_instance.this (expand)" -> "[root] module.cluster.var.performance_insights_enabled (expand)"
		"[root] module.cluster.aws_rds_cluster_instance.this (expand)" -> "[root] module.cluster.var.performance_insights_kms_key_id (expand)"
		"[root] module.cluster.aws_rds_cluster_instance.this (expand)" -> "[root] module.cluster.var.performance_insights_retention_period (expand)"
		"[root] module.cluster.aws_rds_cluster_instance.this (expand)" -> "[root] module.cluster.var.publicly_accessible (expand)"
		"[root] module.cluster.aws_rds_cluster_role_association.this (expand)" -> "[root] module.cluster.aws_rds_cluster.this (expand)"
		"[root] module.cluster.aws_rds_cluster_role_association.this (expand)" -> "[root] module.cluster.var.iam_roles (expand)"
		"[root] module.cluster.aws_security_group.this (expand)" -> "[root] module.cluster.var.create_cluster (expand)"
		"[root] module.cluster.aws_security_group.this (expand)" -> "[root] module.cluster.var.create_security_group (expand)"
		"[root] module.cluster.aws_security_group.this (expand)" -> "[root] module.cluster.var.name (expand)"
		"[root] module.cluster.aws_security_group.this (expand)" -> "[root] module.cluster.var.security_group_description (expand)"
		"[root] module.cluster.aws_security_group.this (expand)" -> "[root] module.cluster.var.security_group_tags (expand)"
		"[root] module.cluster.aws_security_group.this (expand)" -> "[root] module.cluster.var.tags (expand)"
		"[root] module.cluster.aws_security_group.this (expand)" -> "[root] module.cluster.var.vpc_id (expand)"
		"[root] module.cluster.aws_security_group_rule.cidr_ingress (expand)" -> "[root] module.cluster.local.port (expand)"
		"[root] module.cluster.aws_security_group_rule.cidr_ingress (expand)" -> "[root] module.cluster.local.rds_security_group_id (expand)"
		"[root] module.cluster.aws_security_group_rule.cidr_ingress (expand)" -> "[root] module.cluster.var.allowed_cidr_blocks (expand)"
		"[root] module.cluster.aws_security_group_rule.default_ingress (expand)" -> "[root] module.cluster.local.port (expand)"
		"[root] module.cluster.aws_security_group_rule.default_ingress (expand)" -> "[root] module.cluster.local.rds_security_group_id (expand)"
		"[root] module.cluster.aws_security_group_rule.default_ingress (expand)" -> "[root] module.cluster.var.allowed_security_groups (expand)"
		"[root] module.cluster.aws_security_group_rule.egress (expand)" -> "[root] module.cluster.local.port (expand)"
		"[root] module.cluster.aws_security_group_rule.egress (expand)" -> "[root] module.cluster.local.rds_security_group_id (expand)"
		"[root] module.cluster.aws_security_group_rule.egress (expand)" -> "[root] module.cluster.var.security_group_egress_rules (expand)"
		"[root] module.cluster.data.aws_iam_policy_document.monitoring_rds_assume_role (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.data.aws_iam_policy_document.monitoring_rds_assume_role (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.cluster.data.aws_partition.current (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.data.aws_partition.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.cluster.local.backtrack_window (expand)" -> "[root] module.cluster.var.backtrack_window (expand)"
		"[root] module.cluster.local.backtrack_window (expand)" -> "[root] module.cluster.var.engine (expand)"
		"[root] module.cluster.local.backtrack_window (expand)" -> "[root] module.cluster.var.engine_mode (expand)"
		"[root] module.cluster.local.db_subnet_group_name (expand)" -> "[root] module.cluster.aws_db_subnet_group.this (expand)"
		"[root] module.cluster.local.internal_db_subnet_group_name (expand)" -> "[root] module.cluster.var.db_subnet_group_name (expand)"
		"[root] module.cluster.local.internal_db_subnet_group_name (expand)" -> "[root] module.cluster.var.name (expand)"
		"[root] module.cluster.local.is_serverless (expand)" -> "[root] module.cluster.var.engine_mode (expand)"
		"[root] module.cluster.local.master_password (expand)" -> "[root] module.cluster.random_password.master_password (expand)"
		"[root] module.cluster.local.master_password (expand)" -> "[root] module.cluster.var.master_password (expand)"
		"[root] module.cluster.local.port (expand)" -> "[root] module.cluster.var.engine (expand)"
		"[root] module.cluster.local.port (expand)" -> "[root] module.cluster.var.port (expand)"
		"[root] module.cluster.local.rds_enhanced_monitoring_arn (expand)" -> "[root] module.cluster.aws_iam_role.rds_enhanced_monitoring (expand)"
		"[root] module.cluster.local.rds_enhanced_monitoring_arn (expand)" -> "[root] module.cluster.var.monitoring_role_arn (expand)"
		"[root] module.cluster.local.rds_security_group_id (expand)" -> "[root] module.cluster.aws_security_group.this (expand)"
		"[root] module.cluster.output.additional_cluster_endpoints (expand)" -> "[root] module.cluster.aws_rds_cluster_endpoint.this (expand)"
		"[root] module.cluster.output.cluster_arn (expand)" -> "[root] module.cluster.aws_rds_cluster.this (expand)"
		"[root] module.cluster.output.cluster_database_name (expand)" -> "[root] module.cluster.var.database_name (expand)"
		"[root] module.cluster.output.cluster_endpoint (expand)" -> "[root] module.cluster.aws_rds_cluster.this (expand)"
		"[root] module.cluster.output.cluster_engine_version_actual (expand)" -> "[root] module.cluster.aws_rds_cluster.this (expand)"
		"[root] module.cluster.output.cluster_hosted_zone_id (expand)" -> "[root] module.cluster.aws_rds_cluster.this (expand)"
		"[root] module.cluster.output.cluster_id (expand)" -> "[root] module.cluster.aws_rds_cluster.this (expand)"
		"[root] module.cluster.output.cluster_instances (expand)" -> "[root] module.cluster.aws_rds_cluster_instance.this (expand)"
		"[root] module.cluster.output.cluster_master_password (expand)" -> "[root] module.cluster.aws_rds_cluster.this (expand)"
		"[root] module.cluster.output.cluster_master_username (expand)" -> "[root] module.cluster.aws_rds_cluster.this (expand)"
		"[root] module.cluster.output.cluster_members (expand)" -> "[root] module.cluster.aws_rds_cluster.this (expand)"
		"[root] module.cluster.output.cluster_port (expand)" -> "[root] module.cluster.aws_rds_cluster.this (expand)"
		"[root] module.cluster.output.cluster_reader_endpoint (expand)" -> "[root] module.cluster.aws_rds_cluster.this (expand)"
		"[root] module.cluster.output.cluster_resource_id (expand)" -> "[root] module.cluster.aws_rds_cluster.this (expand)"
		"[root] module.cluster.output.cluster_role_associations (expand)" -> "[root] module.cluster.aws_rds_cluster_role_association.this (expand)"
		"[root] module.cluster.output.db_subnet_group_name (expand)" -> "[root] module.cluster.local.db_subnet_group_name (expand)"
		"[root] module.cluster.output.enhanced_monitoring_iam_role_arn (expand)" -> "[root] module.cluster.aws_iam_role.rds_enhanced_monitoring (expand)"
		"[root] module.cluster.output.enhanced_monitoring_iam_role_name (expand)" -> "[root] module.cluster.aws_iam_role.rds_enhanced_monitoring (expand)"
		"[root] module.cluster.output.enhanced_monitoring_iam_role_unique_id (expand)" -> "[root] module.cluster.aws_iam_role.rds_enhanced_monitoring (expand)"
		"[root] module.cluster.output.security_group_id (expand)" -> "[root] module.cluster.local.rds_security_group_id (expand)"
		"[root] module.cluster.random_id.snapshot_identifier (expand)" -> "[root] module.cluster.var.create_cluster (expand)"
		"[root] module.cluster.random_id.snapshot_identifier (expand)" -> "[root] module.cluster.var.name (expand)"
		"[root] module.cluster.random_id.snapshot_identifier (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/random\"]"
		"[root] module.cluster.random_password.master_password (expand)" -> "[root] module.cluster.var.create_cluster (expand)"
		"[root] module.cluster.random_password.master_password (expand)" -> "[root] module.cluster.var.create_random_password (expand)"
		"[root] module.cluster.random_password.master_password (expand)" -> "[root] module.cluster.var.random_password_length (expand)"
		"[root] module.cluster.random_password.master_password (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/random\"]"
		"[root] module.cluster.var.allow_major_version_upgrade (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.allowed_cidr_blocks (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.allowed_security_groups (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.apply_immediately (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.auto_minor_version_upgrade (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.autoscaling_enabled (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.autoscaling_max_capacity (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.autoscaling_min_capacity (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.autoscaling_scale_in_cooldown (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.autoscaling_scale_out_cooldown (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.autoscaling_target_connections (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.autoscaling_target_cpu (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.backtrack_window (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.backup_retention_period (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.ca_cert_identifier (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.cluster_tags (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.cluster_timeouts (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.copy_tags_to_snapshot (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.create_cluster (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.create_db_subnet_group (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.create_monitoring_role (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.create_random_password (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.create_security_group (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.database_name (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.db_cluster_db_instance_parameter_group_name (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.db_cluster_parameter_group_name (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.db_parameter_group_name (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.db_subnet_group_name (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.deletion_protection (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.enable_global_write_forwarding (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.enable_http_endpoint (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.enabled_cloudwatch_logs_exports (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.endpoints (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.engine (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.engine_mode (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.engine_version (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.final_snapshot_identifier_prefix (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.global_cluster_identifier (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.iam_database_authentication_enabled (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.iam_role_description (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.iam_role_force_detach_policies (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.iam_role_managed_policy_arns (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.iam_role_max_session_duration (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.iam_role_name (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.iam_role_path (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.iam_role_permissions_boundary (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.iam_role_use_name_prefix (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.iam_roles (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.instance_class (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.instance_timeouts (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.instances (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.instances_use_identifier_prefix (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.is_primary_cluster (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.kms_key_id (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.master_password (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.master_username (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.monitoring_interval (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.monitoring_role_arn (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.name (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.performance_insights_enabled (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.performance_insights_kms_key_id (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.performance_insights_retention_period (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.port (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.predefined_metric_type (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.preferred_backup_window (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.preferred_maintenance_window (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.publicly_accessible (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.random_password_length (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.replication_source_identifier (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.restore_to_point_in_time (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.s3_import (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.scaling_configuration (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.security_group_description (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.security_group_egress_rules (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.security_group_tags (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.skip_final_snapshot (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.snapshot_identifier (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.source_region (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.storage_encrypted (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.subnets (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.subnets (expand)" -> "[root] module.vpc.output.private_subnets (expand)"
		"[root] module.cluster.var.tags (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.tags (expand)" -> "[root] var.tags"
		"[root] module.cluster.var.vpc_id (expand)" -> "[root] module.cluster (expand)"
		"[root] module.cluster.var.vpc_id (expand)" -> "[root] module.vpc.output.vpc_id (expand)"
		"[root] module.cluster.var.vpc_security_group_ids (expand)" -> "[root] module.cluster (expand)"
		"[root] module.elb_http (close)" -> "[root] module.elb_http.module.elb (close)"
		"[root] module.elb_http (close)" -> "[root] module.elb_http.module.elb_attachment (close)"
		"[root] module.elb_http (close)" -> "[root] module.elb_http.output.this_elb_arn (expand)"
		"[root] module.elb_http (close)" -> "[root] module.elb_http.output.this_elb_dns_name (expand)"
		"[root] module.elb_http (close)" -> "[root] module.elb_http.output.this_elb_id (expand)"
		"[root] module.elb_http (close)" -> "[root] module.elb_http.output.this_elb_instances (expand)"
		"[root] module.elb_http (close)" -> "[root] module.elb_http.output.this_elb_name (expand)"
		"[root] module.elb_http (close)" -> "[root] module.elb_http.output.this_elb_source_security_group_id (expand)"
		"[root] module.elb_http (close)" -> "[root] module.elb_http.output.this_elb_zone_id (expand)"
		"[root] module.elb_http.module.elb (close)" -> "[root] module.elb_http.module.elb.output.this_elb_arn (expand)"
		"[root] module.elb_http.module.elb (close)" -> "[root] module.elb_http.module.elb.output.this_elb_dns_name (expand)"
		"[root] module.elb_http.module.elb (close)" -> "[root] module.elb_http.module.elb.output.this_elb_id (expand)"
		"[root] module.elb_http.module.elb (close)" -> "[root] module.elb_http.module.elb.output.this_elb_instances (expand)"
		"[root] module.elb_http.module.elb (close)" -> "[root] module.elb_http.module.elb.output.this_elb_name (expand)"
		"[root] module.elb_http.module.elb (close)" -> "[root] module.elb_http.module.elb.output.this_elb_source_security_group (expand)"
		"[root] module.elb_http.module.elb (close)" -> "[root] module.elb_http.module.elb.output.this_elb_source_security_group_id (expand)"
		"[root] module.elb_http.module.elb (close)" -> "[root] module.elb_http.module.elb.output.this_elb_zone_id (expand)"
		"[root] module.elb_http.module.elb (expand)" -> "[root] module.elb_http (expand)"
		"[root] module.elb_http.module.elb.aws_elb.this (expand)" -> "[root] module.elb_http.module.elb.var.access_logs (expand)"
		"[root] module.elb_http.module.elb.aws_elb.this (expand)" -> "[root] module.elb_http.module.elb.var.connection_draining (expand)"
		"[root] module.elb_http.module.elb.aws_elb.this (expand)" -> "[root] module.elb_http.module.elb.var.connection_draining_timeout (expand)"
		"[root] module.elb_http.module.elb.aws_elb.this (expand)" -> "[root] module.elb_http.module.elb.var.create_elb (expand)"
		"[root] module.elb_http.module.elb.aws_elb.this (expand)" -> "[root] module.elb_http.module.elb.var.cross_zone_load_balancing (expand)"
		"[root] module.elb_http.module.elb.aws_elb.this (expand)" -> "[root] module.elb_http.module.elb.var.health_check (expand)"
		"[root] module.elb_http.module.elb.aws_elb.this (expand)" -> "[root] module.elb_http.module.elb.var.idle_timeout (expand)"
		"[root] module.elb_http.module.elb.aws_elb.this (expand)" -> "[root] module.elb_http.module.elb.var.internal (expand)"
		"[root] module.elb_http.module.elb.aws_elb.this (expand)" -> "[root] module.elb_http.module.elb.var.listener (expand)"
		"[root] module.elb_http.module.elb.aws_elb.this (expand)" -> "[root] module.elb_http.module.elb.var.name (expand)"
		"[root] module.elb_http.module.elb.aws_elb.this (expand)" -> "[root] module.elb_http.module.elb.var.name_prefix (expand)"
		"[root] module.elb_http.module.elb.aws_elb.this (expand)" -> "[root] module.elb_http.module.elb.var.security_groups (expand)"
		"[root] module.elb_http.module.elb.aws_elb.this (expand)" -> "[root] module.elb_http.module.elb.var.subnets (expand)"
		"[root] module.elb_http.module.elb.aws_elb.this (expand)" -> "[root] module.elb_http.module.elb.var.tags (expand)"
		"[root] module.elb_http.module.elb.output.this_elb_arn (expand)" -> "[root] module.elb_http.module.elb.aws_elb.this (expand)"
		"[root] module.elb_http.module.elb.output.this_elb_dns_name (expand)" -> "[root] module.elb_http.module.elb.aws_elb.this (expand)"
		"[root] module.elb_http.module.elb.output.this_elb_id (expand)" -> "[root] module.elb_http.module.elb.aws_elb.this (expand)"
		"[root] module.elb_http.module.elb.output.this_elb_instances (expand)" -> "[root] module.elb_http.module.elb.aws_elb.this (expand)"
		"[root] module.elb_http.module.elb.output.this_elb_name (expand)" -> "[root] module.elb_http.module.elb.aws_elb.this (expand)"
		"[root] module.elb_http.module.elb.output.this_elb_source_security_group (expand)" -> "[root] module.elb_http.module.elb.aws_elb.this (expand)"
		"[root] module.elb_http.module.elb.output.this_elb_source_security_group_id (expand)" -> "[root] module.elb_http.module.elb.aws_elb.this (expand)"
		"[root] module.elb_http.module.elb.output.this_elb_zone_id (expand)" -> "[root] module.elb_http.module.elb.aws_elb.this (expand)"
		"[root] module.elb_http.module.elb.var.access_logs (expand)" -> "[root] module.elb_http.module.elb (expand)"
		"[root] module.elb_http.module.elb.var.access_logs (expand)" -> "[root] module.elb_http.var.access_logs (expand)"
		"[root] module.elb_http.module.elb.var.connection_draining (expand)" -> "[root] module.elb_http.module.elb (expand)"
		"[root] module.elb_http.module.elb.var.connection_draining (expand)" -> "[root] module.elb_http.var.connection_draining (expand)"
		"[root] module.elb_http.module.elb.var.connection_draining_timeout (expand)" -> "[root] module.elb_http.module.elb (expand)"
		"[root] module.elb_http.module.elb.var.connection_draining_timeout (expand)" -> "[root] module.elb_http.var.connection_draining_timeout (expand)"
		"[root] module.elb_http.module.elb.var.create_elb (expand)" -> "[root] module.elb_http.module.elb (expand)"
		"[root] module.elb_http.module.elb.var.create_elb (expand)" -> "[root] module.elb_http.var.create_elb (expand)"
		"[root] module.elb_http.module.elb.var.cross_zone_load_balancing (expand)" -> "[root] module.elb_http.module.elb (expand)"
		"[root] module.elb_http.module.elb.var.cross_zone_load_balancing (expand)" -> "[root] module.elb_http.var.cross_zone_load_balancing (expand)"
		"[root] module.elb_http.module.elb.var.health_check (expand)" -> "[root] module.elb_http.module.elb (expand)"
		"[root] module.elb_http.module.elb.var.health_check (expand)" -> "[root] module.elb_http.var.health_check (expand)"
		"[root] module.elb_http.module.elb.var.idle_timeout (expand)" -> "[root] module.elb_http.module.elb (expand)"
		"[root] module.elb_http.module.elb.var.idle_timeout (expand)" -> "[root] module.elb_http.var.idle_timeout (expand)"
		"[root] module.elb_http.module.elb.var.internal (expand)" -> "[root] module.elb_http.module.elb (expand)"
		"[root] module.elb_http.module.elb.var.internal (expand)" -> "[root] module.elb_http.var.internal (expand)"
		"[root] module.elb_http.module.elb.var.listener (expand)" -> "[root] module.elb_http.module.elb (expand)"
		"[root] module.elb_http.module.elb.var.listener (expand)" -> "[root] module.elb_http.var.listener (expand)"
		"[root] module.elb_http.module.elb.var.name (expand)" -> "[root] module.elb_http.module.elb (expand)"
		"[root] module.elb_http.module.elb.var.name (expand)" -> "[root] module.elb_http.var.name (expand)"
		"[root] module.elb_http.module.elb.var.name_prefix (expand)" -> "[root] module.elb_http.module.elb (expand)"
		"[root] module.elb_http.module.elb.var.name_prefix (expand)" -> "[root] module.elb_http.var.name_prefix (expand)"
		"[root] module.elb_http.module.elb.var.security_groups (expand)" -> "[root] module.elb_http.module.elb (expand)"
		"[root] module.elb_http.module.elb.var.security_groups (expand)" -> "[root] module.elb_http.var.security_groups (expand)"
		"[root] module.elb_http.module.elb.var.subnets (expand)" -> "[root] module.elb_http.module.elb (expand)"
		"[root] module.elb_http.module.elb.var.subnets (expand)" -> "[root] module.elb_http.var.subnets (expand)"
		"[root] module.elb_http.module.elb.var.tags (expand)" -> "[root] module.elb_http.module.elb (expand)"
		"[root] module.elb_http.module.elb.var.tags (expand)" -> "[root] module.elb_http.var.name (expand)"
		"[root] module.elb_http.module.elb.var.tags (expand)" -> "[root] module.elb_http.var.tags (expand)"
		"[root] module.elb_http.module.elb_attachment (close)" -> "[root] module.elb_http.module.elb_attachment.aws_elb_attachment.this (expand)"
		"[root] module.elb_http.module.elb_attachment (expand)" -> "[root] module.elb_http (expand)"
		"[root] module.elb_http.module.elb_attachment.aws_elb_attachment.this (expand)" -> "[root] module.elb_http.module.elb_attachment.var.create_attachment (expand)"
		"[root] module.elb_http.module.elb_attachment.aws_elb_attachment.this (expand)" -> "[root] module.elb_http.module.elb_attachment.var.elb (expand)"
		"[root] module.elb_http.module.elb_attachment.aws_elb_attachment.this (expand)" -> "[root] module.elb_http.module.elb_attachment.var.instances (expand)"
		"[root] module.elb_http.module.elb_attachment.aws_elb_attachment.this (expand)" -> "[root] module.elb_http.module.elb_attachment.var.number_of_instances (expand)"
		"[root] module.elb_http.module.elb_attachment.var.create_attachment (expand)" -> "[root] module.elb_http.module.elb_attachment (expand)"
		"[root] module.elb_http.module.elb_attachment.var.create_attachment (expand)" -> "[root] module.elb_http.var.create_elb (expand)"
		"[root] module.elb_http.module.elb_attachment.var.elb (expand)" -> "[root] module.elb_http.module.elb.output.this_elb_id (expand)"
		"[root] module.elb_http.module.elb_attachment.var.elb (expand)" -> "[root] module.elb_http.module.elb_attachment (expand)"
		"[root] module.elb_http.module.elb_attachment.var.instances (expand)" -> "[root] module.elb_http.module.elb_attachment (expand)"
		"[root] module.elb_http.module.elb_attachment.var.instances (expand)" -> "[root] module.elb_http.var.instances (expand)"
		"[root] module.elb_http.module.elb_attachment.var.number_of_instances (expand)" -> "[root] module.elb_http.module.elb_attachment (expand)"
		"[root] module.elb_http.module.elb_attachment.var.number_of_instances (expand)" -> "[root] module.elb_http.var.number_of_instances (expand)"
		"[root] module.elb_http.output.this_elb_arn (expand)" -> "[root] module.elb_http.module.elb.output.this_elb_arn (expand)"
		"[root] module.elb_http.output.this_elb_dns_name (expand)" -> "[root] module.elb_http.module.elb.output.this_elb_dns_name (expand)"
		"[root] module.elb_http.output.this_elb_id (expand)" -> "[root] module.elb_http.module.elb.output.this_elb_id (expand)"
		"[root] module.elb_http.output.this_elb_instances (expand)" -> "[root] module.elb_http.module.elb.output.this_elb_instances (expand)"
		"[root] module.elb_http.output.this_elb_name (expand)" -> "[root] module.elb_http.module.elb.output.this_elb_name (expand)"
		"[root] module.elb_http.output.this_elb_source_security_group_id (expand)" -> "[root] module.elb_http.module.elb.output.this_elb_source_security_group_id (expand)"
		"[root] module.elb_http.output.this_elb_zone_id (expand)" -> "[root] module.elb_http.module.elb.output.this_elb_zone_id (expand)"
		"[root] module.elb_http.var.access_logs (expand)" -> "[root] module.elb_http (expand)"
		"[root] module.elb_http.var.connection_draining (expand)" -> "[root] module.elb_http (expand)"
		"[root] module.elb_http.var.connection_draining_timeout (expand)" -> "[root] module.elb_http (expand)"
		"[root] module.elb_http.var.create_elb (expand)" -> "[root] module.elb_http (expand)"
		"[root] module.elb_http.var.cross_zone_load_balancing (expand)" -> "[root] module.elb_http (expand)"
		"[root] module.elb_http.var.health_check (expand)" -> "[root] module.elb_http (expand)"
		"[root] module.elb_http.var.idle_timeout (expand)" -> "[root] module.elb_http (expand)"
		"[root] module.elb_http.var.instances (expand)" -> "[root] module.elb_http (expand)"
		"[root] module.elb_http.var.internal (expand)" -> "[root] module.elb_http (expand)"
		"[root] module.elb_http.var.listener (expand)" -> "[root] module.elb_http (expand)"
		"[root] module.elb_http.var.name (expand)" -> "[root] module.elb_http (expand)"
		"[root] module.elb_http.var.name_prefix (expand)" -> "[root] module.elb_http (expand)"
		"[root] module.elb_http.var.number_of_instances (expand)" -> "[root] module.elb_http (expand)"
		"[root] module.elb_http.var.security_groups (expand)" -> "[root] module.elb_http (expand)"
		"[root] module.elb_http.var.security_groups (expand)" -> "[root] module.wordpress.output.security_group_id (expand)"
		"[root] module.elb_http.var.subnets (expand)" -> "[root] module.elb_http (expand)"
		"[root] module.elb_http.var.subnets (expand)" -> "[root] module.vpc.output.public_subnets (expand)"
		"[root] module.elb_http.var.tags (expand)" -> "[root] module.elb_http (expand)"
		"[root] module.elb_http.var.tags (expand)" -> "[root] var.tags"
		"[root] module.redis (close)" -> "[root] module.redis.aws_security_group_rule.redis_egress (expand)"
		"[root] module.redis (close)" -> "[root] module.redis.aws_security_group_rule.redis_ingress_cidr_blocks (expand)"
		"[root] module.redis (close)" -> "[root] module.redis.aws_security_group_rule.redis_ingress_self (expand)"
		"[root] module.redis (close)" -> "[root] module.redis.output.elasticache_auth_token (expand)"
		"[root] module.redis (close)" -> "[root] module.redis.output.elasticache_parameter_group_id (expand)"
		"[root] module.redis (close)" -> "[root] module.redis.output.elasticache_port (expand)"
		"[root] module.redis (close)" -> "[root] module.redis.output.elasticache_replication_group_arn (expand)"
		"[root] module.redis (close)" -> "[root] module.redis.output.elasticache_replication_group_id (expand)"
		"[root] module.redis (close)" -> "[root] module.redis.output.elasticache_replication_group_member_clusters (expand)"
		"[root] module.redis (close)" -> "[root] module.redis.output.elasticache_replication_group_primary_endpoint_address (expand)"
		"[root] module.redis (close)" -> "[root] module.redis.output.elasticache_replication_group_reader_endpoint_address (expand)"
		"[root] module.redis (close)" -> "[root] module.redis.output.security_group_arn (expand)"
		"[root] module.redis (close)" -> "[root] module.redis.output.security_group_description (expand)"
		"[root] module.redis (close)" -> "[root] module.redis.output.security_group_egress (expand)"
		"[root] module.redis (close)" -> "[root] module.redis.output.security_group_id (expand)"
		"[root] module.redis (close)" -> "[root] module.redis.output.security_group_ingress (expand)"
		"[root] module.redis (close)" -> "[root] module.redis.output.security_group_name (expand)"
		"[root] module.redis (close)" -> "[root] module.redis.output.security_group_owner_id (expand)"
		"[root] module.redis (close)" -> "[root] module.redis.output.security_group_vpc_id (expand)"
		"[root] module.redis.aws_elasticache_parameter_group.redis (expand)" -> "[root] module.redis.random_id.redis_pg (expand)"
		"[root] module.redis.aws_elasticache_parameter_group.redis (expand)" -> "[root] module.redis.var.cluster_mode_enabled (expand)"
		"[root] module.redis.aws_elasticache_parameter_group.redis (expand)" -> "[root] module.redis.var.description (expand)"
		"[root] module.redis.aws_elasticache_parameter_group.redis (expand)" -> "[root] module.redis.var.name_prefix (expand)"
		"[root] module.redis.aws_elasticache_parameter_group.redis (expand)" -> "[root] module.redis.var.parameter (expand)"
		"[root] module.redis.aws_elasticache_parameter_group.redis (expand)" -> "[root] module.redis.var.tags (expand)"
		"[root] module.redis.aws_elasticache_parameter_group.redis (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.redis.aws_elasticache_replication_group.redis (expand)" -> "[root] module.redis.aws_elasticache_parameter_group.redis (expand)"
		"[root] module.redis.aws_elasticache_replication_group.redis (expand)" -> "[root] module.redis.aws_elasticache_subnet_group.redis (expand)"
		"[root] module.redis.aws_elasticache_replication_group.redis (expand)" -> "[root] module.redis.aws_security_group.redis (expand)"
		"[root] module.redis.aws_elasticache_replication_group.redis (expand)" -> "[root] module.redis.var.apply_immediately (expand)"
		"[root] module.redis.aws_elasticache_replication_group.redis (expand)" -> "[root] module.redis.var.at_rest_encryption_enabled (expand)"
		"[root] module.redis.aws_elasticache_replication_group.redis (expand)" -> "[root] module.redis.var.auth_token (expand)"
		"[root] module.redis.aws_elasticache_replication_group.redis (expand)" -> "[root] module.redis.var.auto_minor_version_upgrade (expand)"
		"[root] module.redis.aws_elasticache_replication_group.redis (expand)" -> "[root] module.redis.var.automatic_failover_enabled (expand)"
		"[root] module.redis.aws_elasticache_replication_group.redis (expand)" -> "[root] module.redis.var.availability_zones (expand)"
		"[root] module.redis.aws_elasticache_replication_group.redis (expand)" -> "[root] module.redis.var.engine_version (expand)"
		"[root] module.redis.aws_elasticache_replication_group.redis (expand)" -> "[root] module.redis.var.final_snapshot_identifier (expand)"
		"[root] module.redis.aws_elasticache_replication_group.redis (expand)" -> "[root] module.redis.var.kms_key_id (expand)"
		"[root] module.redis.aws_elasticache_replication_group.redis (expand)" -> "[root] module.redis.var.maintenance_window (expand)"
		"[root] module.redis.aws_elasticache_replication_group.redis (expand)" -> "[root] module.redis.var.multi_az_enabled (expand)"
		"[root] module.redis.aws_elasticache_replication_group.redis (expand)" -> "[root] module.redis.var.node_type (expand)"
		"[root] module.redis.aws_elasticache_replication_group.redis (expand)" -> "[root] module.redis.var.notification_topic_arn (expand)"
		"[root] module.redis.aws_elasticache_replication_group.redis (expand)" -> "[root] module.redis.var.num_node_groups (expand)"
		"[root] module.redis.aws_elasticache_replication_group.redis (expand)" -> "[root] module.redis.var.number_cache_clusters (expand)"
		"[root] module.redis.aws_elasticache_replication_group.redis (expand)" -> "[root] module.redis.var.port (expand)"
		"[root] module.redis.aws_elasticache_replication_group.redis (expand)" -> "[root] module.redis.var.replicas_per_node_group (expand)"
		"[root] module.redis.aws_elasticache_replication_group.redis (expand)" -> "[root] module.redis.var.security_group_ids (expand)"
		"[root] module.redis.aws_elasticache_replication_group.redis (expand)" -> "[root] module.redis.var.snapshot_retention_limit (expand)"
		"[root] module.redis.aws_elasticache_replication_group.redis (expand)" -> "[root] module.redis.var.snapshot_window (expand)"
		"[root] module.redis.aws_elasticache_replication_group.redis (expand)" -> "[root] module.redis.var.transit_encryption_enabled (expand)"
		"[root] module.redis.aws_elasticache_subnet_group.redis (expand)" -> "[root] module.redis.var.description (expand)"
		"[root] module.redis.aws_elasticache_subnet_group.redis (expand)" -> "[root] module.redis.var.name_prefix (expand)"
		"[root] module.redis.aws_elasticache_subnet_group.redis (expand)" -> "[root] module.redis.var.subnet_ids (expand)"
		"[root] module.redis.aws_elasticache_subnet_group.redis (expand)" -> "[root] module.redis.var.tags (expand)"
		"[root] module.redis.aws_security_group.redis (expand)" -> "[root] module.redis.var.name_prefix (expand)"
		"[root] module.redis.aws_security_group.redis (expand)" -> "[root] module.redis.var.tags (expand)"
		"[root] module.redis.aws_security_group.redis (expand)" -> "[root] module.redis.var.vpc_id (expand)"
		"[root] module.redis.aws_security_group_rule.redis_egress (expand)" -> "[root] module.redis.aws_security_group.redis (expand)"
		"[root] module.redis.aws_security_group_rule.redis_ingress_cidr_blocks (expand)" -> "[root] module.redis.aws_security_group.redis (expand)"
		"[root] module.redis.aws_security_group_rule.redis_ingress_cidr_blocks (expand)" -> "[root] module.redis.var.ingress_cidr_blocks (expand)"
		"[root] module.redis.aws_security_group_rule.redis_ingress_cidr_blocks (expand)" -> "[root] module.redis.var.port (expand)"
		"[root] module.redis.aws_security_group_rule.redis_ingress_self (expand)" -> "[root] module.redis.aws_security_group.redis (expand)"
		"[root] module.redis.aws_security_group_rule.redis_ingress_self (expand)" -> "[root] module.redis.var.ingress_self (expand)"
		"[root] module.redis.aws_security_group_rule.redis_ingress_self (expand)" -> "[root] module.redis.var.port (expand)"
		"[root] module.redis.output.elasticache_auth_token (expand)" -> "[root] module.redis.aws_elasticache_replication_group.redis (expand)"
		"[root] module.redis.output.elasticache_parameter_group_id (expand)" -> "[root] module.redis.aws_elasticache_parameter_group.redis (expand)"
		"[root] module.redis.output.elasticache_port (expand)" -> "[root] module.redis.aws_elasticache_replication_group.redis (expand)"
		"[root] module.redis.output.elasticache_replication_group_arn (expand)" -> "[root] module.redis.aws_elasticache_replication_group.redis (expand)"
		"[root] module.redis.output.elasticache_replication_group_id (expand)" -> "[root] module.redis.aws_elasticache_replication_group.redis (expand)"
		"[root] module.redis.output.elasticache_replication_group_member_clusters (expand)" -> "[root] module.redis.aws_elasticache_replication_group.redis (expand)"
		"[root] module.redis.output.elasticache_replication_group_primary_endpoint_address (expand)" -> "[root] module.redis.aws_elasticache_replication_group.redis (expand)"
		"[root] module.redis.output.elasticache_replication_group_reader_endpoint_address (expand)" -> "[root] module.redis.aws_elasticache_replication_group.redis (expand)"
		"[root] module.redis.output.security_group_arn (expand)" -> "[root] module.redis.aws_security_group.redis (expand)"
		"[root] module.redis.output.security_group_description (expand)" -> "[root] module.redis.aws_security_group.redis (expand)"
		"[root] module.redis.output.security_group_egress (expand)" -> "[root] module.redis.aws_security_group.redis (expand)"
		"[root] module.redis.output.security_group_id (expand)" -> "[root] module.redis.aws_security_group.redis (expand)"
		"[root] module.redis.output.security_group_ingress (expand)" -> "[root] module.redis.aws_security_group.redis (expand)"
		"[root] module.redis.output.security_group_name (expand)" -> "[root] module.redis.aws_security_group.redis (expand)"
		"[root] module.redis.output.security_group_owner_id (expand)" -> "[root] module.redis.aws_security_group.redis (expand)"
		"[root] module.redis.output.security_group_vpc_id (expand)" -> "[root] module.redis.aws_security_group.redis (expand)"
		"[root] module.redis.random_id.redis_pg (expand)" -> "[root] module.redis.var.family (expand)"
		"[root] module.redis.random_id.redis_pg (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/random\"]"
		"[root] module.redis.var.apply_immediately (expand)" -> "[root] module.redis (expand)"
		"[root] module.redis.var.at_rest_encryption_enabled (expand)" -> "[root] module.redis (expand)"
		"[root] module.redis.var.auth_token (expand)" -> "[root] module.redis (expand)"
		"[root] module.redis.var.auto_minor_version_upgrade (expand)" -> "[root] module.redis (expand)"
		"[root] module.redis.var.automatic_failover_enabled (expand)" -> "[root] module.redis (expand)"
		"[root] module.redis.var.availability_zones (expand)" -> "[root] module.redis (expand)"
		"[root] module.redis.var.cluster_mode_enabled (expand)" -> "[root] module.redis (expand)"
		"[root] module.redis.var.description (expand)" -> "[root] module.redis (expand)"
		"[root] module.redis.var.engine_version (expand)" -> "[root] module.redis (expand)"
		"[root] module.redis.var.family (expand)" -> "[root] module.redis (expand)"
		"[root] module.redis.var.final_snapshot_identifier (expand)" -> "[root] module.redis (expand)"
		"[root] module.redis.var.ingress_cidr_blocks (expand)" -> "[root] module.redis (expand)"
		"[root] module.redis.var.ingress_self (expand)" -> "[root] module.redis (expand)"
		"[root] module.redis.var.kms_key_id (expand)" -> "[root] module.redis (expand)"
		"[root] module.redis.var.maintenance_window (expand)" -> "[root] module.redis (expand)"
		"[root] module.redis.var.multi_az_enabled (expand)" -> "[root] module.redis (expand)"
		"[root] module.redis.var.name_prefix (expand)" -> "[root] module.redis (expand)"
		"[root] module.redis.var.node_type (expand)" -> "[root] module.redis (expand)"
		"[root] module.redis.var.notification_topic_arn (expand)" -> "[root] module.redis (expand)"
		"[root] module.redis.var.num_node_groups (expand)" -> "[root] module.redis (expand)"
		"[root] module.redis.var.number_cache_clusters (expand)" -> "[root] module.redis (expand)"
		"[root] module.redis.var.parameter (expand)" -> "[root] module.redis (expand)"
		"[root] module.redis.var.port (expand)" -> "[root] module.redis (expand)"
		"[root] module.redis.var.replicas_per_node_group (expand)" -> "[root] module.redis (expand)"
		"[root] module.redis.var.security_group_ids (expand)" -> "[root] module.redis (expand)"
		"[root] module.redis.var.snapshot_retention_limit (expand)" -> "[root] module.redis (expand)"
		"[root] module.redis.var.snapshot_window (expand)" -> "[root] module.redis (expand)"
		"[root] module.redis.var.subnet_ids (expand)" -> "[root] module.redis (expand)"
		"[root] module.redis.var.subnet_ids (expand)" -> "[root] module.vpc.output.private_subnets (expand)"
		"[root] module.redis.var.tags (expand)" -> "[root] module.redis (expand)"
		"[root] module.redis.var.tags (expand)" -> "[root] var.tags"
		"[root] module.redis.var.transit_encryption_enabled (expand)" -> "[root] module.redis (expand)"
		"[root] module.redis.var.vpc_id (expand)" -> "[root] module.redis (expand)"
		"[root] module.redis.var.vpc_id (expand)" -> "[root] module.vpc.output.vpc_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_default_network_acl.this (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_default_route_table.default (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_default_security_group.this (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.database_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.database_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.elasticache_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.elasticache_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.intra_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.intra_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.outpost_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.outpost_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.private_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.private_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.public_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.public_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.redshift_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.redshift_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_route_table_association.outpost (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_vpc_dhcp_options_association.this (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.azs (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.cgw_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.cgw_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_internet_gateway_route_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_ipv6_egress_route_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_nat_gateway_route_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_route_table_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_subnet_group (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_subnet_group_name (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_route_table_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_security_group_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_cidr_block (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_default_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_default_route_table_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_default_security_group_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_enable_dns_hostnames (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_enable_dns_support (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_instance_tenancy (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_main_route_table_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.dhcp_options_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.egress_only_internet_gateway_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_route_table_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_subnet_group (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_subnet_group_name (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.igw_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.igw_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_route_table_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.name (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.nat_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.nat_public_ips (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.natgw_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.outpost_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.outpost_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.outpost_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.outpost_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.outpost_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.outpost_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_ipv6_egress_route_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_nat_gateway_route_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_route_table_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_internet_gateway_ipv6_route_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_internet_gateway_route_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_route_table_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_public_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_route_table_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_subnet_group (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.this_customer_gateway (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vgw_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vgw_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_cidr_block (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_enable_dns_hostnames (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_enable_dns_support (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_flow_log_cloudwatch_iam_role_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_flow_log_destination_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_flow_log_destination_type (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_flow_log_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_instance_tenancy (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_ipv6_association_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_ipv6_cidr_block (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_main_route_table_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_owner_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_secondary_cidr_blocks (expand)"
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" -> "[root] module.vpc.local.create_flow_log_cloudwatch_log_group (expand)"
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" -> "[root] module.vpc.var.flow_log_cloudwatch_log_group_kms_key_id (expand)"
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" -> "[root] module.vpc.var.flow_log_cloudwatch_log_group_name_prefix (expand)"
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" -> "[root] module.vpc.var.flow_log_cloudwatch_log_group_retention_in_days (expand)"
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" -> "[root] module.vpc.var.vpc_flow_log_tags (expand)"
		"[root] module.vpc.aws_customer_gateway.this (expand)" -> "[root] module.vpc.var.customer_gateway_tags (expand)"
		"[root] module.vpc.aws_customer_gateway.this (expand)" -> "[root] module.vpc.var.customer_gateways (expand)"
		"[root] module.vpc.aws_customer_gateway.this (expand)" -> "[root] module.vpc.var.name (expand)"
		"[root] module.vpc.aws_customer_gateway.this (expand)" -> "[root] module.vpc.var.tags (expand)"
		"[root] module.vpc.aws_customer_gateway.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.aws_db_subnet_group.database (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.aws_db_subnet_group.database (expand)" -> "[root] module.vpc.var.create_database_subnet_group (expand)"
		"[root] module.vpc.aws_db_subnet_group.database (expand)" -> "[root] module.vpc.var.database_subnet_group_name (expand)"
		"[root] module.vpc.aws_db_subnet_group.database (expand)" -> "[root] module.vpc.var.database_subnet_group_tags (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.aws_network_acl.database (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.aws_network_acl.elasticache (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.aws_network_acl.intra (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.aws_network_acl.outpost (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.aws_network_acl.private (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.aws_network_acl.public (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.aws_network_acl.redshift (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.var.default_network_acl_egress (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.var.default_network_acl_ingress (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.var.default_network_acl_name (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.var.default_network_acl_tags (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.var.manage_default_network_acl (expand)"
		"[root] module.vpc.aws_default_route_table.default (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.aws_default_route_table.default (expand)" -> "[root] module.vpc.var.default_route_table_propagating_vgws (expand)"
		"[root] module.vpc.aws_default_route_table.default (expand)" -> "[root] module.vpc.var.default_route_table_routes (expand)"
		"[root] module.vpc.aws_default_route_table.default (expand)" -> "[root] module.vpc.var.default_route_table_tags (expand)"
		"[root] module.vpc.aws_default_route_table.default (expand)" -> "[root] module.vpc.var.manage_default_route_table (expand)"
		"[root] module.vpc.aws_default_security_group.this (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.aws_default_security_group.this (expand)" -> "[root] module.vpc.var.default_security_group_egress (expand)"
		"[root] module.vpc.aws_default_security_group.this (expand)" -> "[root] module.vpc.var.default_security_group_ingress (expand)"
		"[root] module.vpc.aws_default_security_group.this (expand)" -> "[root] module.vpc.var.default_security_group_name (expand)"
		"[root] module.vpc.aws_default_security_group.this (expand)" -> "[root] module.vpc.var.default_security_group_tags (expand)"
		"[root] module.vpc.aws_default_security_group.this (expand)" -> "[root] module.vpc.var.manage_default_security_group (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] module.vpc.var.default_vpc_enable_classiclink (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] module.vpc.var.default_vpc_enable_dns_hostnames (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] module.vpc.var.default_vpc_enable_dns_support (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] module.vpc.var.default_vpc_name (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] module.vpc.var.default_vpc_tags (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] module.vpc.var.manage_default_vpc (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] module.vpc.var.tags (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.aws_egress_only_internet_gateway.this (expand)" -> "[root] module.vpc.local.max_subnet_length (expand)"
		"[root] module.vpc.aws_egress_only_internet_gateway.this (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_egress_only_internet_gateway.this (expand)" -> "[root] module.vpc.var.create_egress_only_igw (expand)"
		"[root] module.vpc.aws_egress_only_internet_gateway.this (expand)" -> "[root] module.vpc.var.igw_tags (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] module.vpc.local.nat_gateway_count (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] module.vpc.var.create_vpc (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] module.vpc.var.enable_nat_gateway (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] module.vpc.var.name (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] module.vpc.var.nat_eip_tags (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] module.vpc.var.reuse_nat_ips (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] module.vpc.var.tags (expand)"
		"[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)" -> "[root] module.vpc.var.create_elasticache_subnet_group (expand)"
		"[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_group_name (expand)"
		"[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_group_tags (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.local.flow_log_destination_arn (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.local.flow_log_iam_role_arn (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.var.flow_log_file_format (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.var.flow_log_hive_compatible_partitions (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.var.flow_log_log_format (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.var.flow_log_max_aggregation_interval (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.var.flow_log_per_hour_partition (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.var.flow_log_traffic_type (expand)"
		"[root] module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch (expand)"
		"[root] module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.var.tags (expand)"
		"[root] module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.var.vpc_flow_log_tags (expand)"
		"[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role (expand)"
		"[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.var.tags (expand)"
		"[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.var.vpc_flow_log_permissions_boundary (expand)"
		"[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.var.vpc_flow_log_tags (expand)"
		"[root] module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch (expand)"
		"[root] module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)"
		"[root] module.vpc.aws_internet_gateway.this (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_internet_gateway.this (expand)" -> "[root] module.vpc.var.create_igw (expand)"
		"[root] module.vpc.aws_internet_gateway.this (expand)" -> "[root] module.vpc.var.igw_tags (expand)"
		"[root] module.vpc.aws_internet_gateway.this (expand)" -> "[root] module.vpc.var.public_subnets (expand)"
		"[root] module.vpc.aws_nat_gateway.this (expand)" -> "[root] module.vpc.aws_internet_gateway.this (expand)"
		"[root] module.vpc.aws_nat_gateway.this (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.aws_nat_gateway.this (expand)" -> "[root] module.vpc.local.nat_gateway_ips (expand)"
		"[root] module.vpc.aws_nat_gateway.this (expand)" -> "[root] module.vpc.var.nat_gateway_tags (expand)"
		"[root] module.vpc.aws_network_acl.database (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.aws_network_acl.database (expand)" -> "[root] module.vpc.var.database_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl.database (expand)" -> "[root] module.vpc.var.database_dedicated_network_acl (expand)"
		"[root] module.vpc.aws_network_acl.elasticache (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.aws_network_acl.elasticache (expand)" -> "[root] module.vpc.var.elasticache_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl.elasticache (expand)" -> "[root] module.vpc.var.elasticache_dedicated_network_acl (expand)"
		"[root] module.vpc.aws_network_acl.intra (expand)" -> "[root] module.vpc.aws_subnet.intra (expand)"
		"[root] module.vpc.aws_network_acl.intra (expand)" -> "[root] module.vpc.var.intra_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl.intra (expand)" -> "[root] module.vpc.var.intra_dedicated_network_acl (expand)"
		"[root] module.vpc.aws_network_acl.outpost (expand)" -> "[root] module.vpc.aws_subnet.outpost (expand)"
		"[root] module.vpc.aws_network_acl.outpost (expand)" -> "[root] module.vpc.var.outpost_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl.outpost (expand)" -> "[root] module.vpc.var.outpost_dedicated_network_acl (expand)"
		"[root] module.vpc.aws_network_acl.private (expand)" -> "[root] module.vpc.aws_subnet.private (expand)"
		"[root] module.vpc.aws_network_acl.private (expand)" -> "[root] module.vpc.var.private_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl.private (expand)" -> "[root] module.vpc.var.private_dedicated_network_acl (expand)"
		"[root] module.vpc.aws_network_acl.public (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.aws_network_acl.public (expand)" -> "[root] module.vpc.var.public_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl.public (expand)" -> "[root] module.vpc.var.public_dedicated_network_acl (expand)"
		"[root] module.vpc.aws_network_acl.redshift (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.aws_network_acl.redshift (expand)" -> "[root] module.vpc.var.redshift_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl.redshift (expand)" -> "[root] module.vpc.var.redshift_dedicated_network_acl (expand)"
		"[root] module.vpc.aws_network_acl_rule.database_inbound (expand)" -> "[root] module.vpc.aws_network_acl.database (expand)"
		"[root] module.vpc.aws_network_acl_rule.database_inbound (expand)" -> "[root] module.vpc.var.database_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.database_outbound (expand)" -> "[root] module.vpc.aws_network_acl.database (expand)"
		"[root] module.vpc.aws_network_acl_rule.database_outbound (expand)" -> "[root] module.vpc.var.database_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.elasticache_inbound (expand)" -> "[root] module.vpc.aws_network_acl.elasticache (expand)"
		"[root] module.vpc.aws_network_acl_rule.elasticache_inbound (expand)" -> "[root] module.vpc.var.elasticache_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.elasticache_outbound (expand)" -> "[root] module.vpc.aws_network_acl.elasticache (expand)"
		"[root] module.vpc.aws_network_acl_rule.elasticache_outbound (expand)" -> "[root] module.vpc.var.elasticache_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.intra_inbound (expand)" -> "[root] module.vpc.aws_network_acl.intra (expand)"
		"[root] module.vpc.aws_network_acl_rule.intra_inbound (expand)" -> "[root] module.vpc.var.intra_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.intra_outbound (expand)" -> "[root] module.vpc.aws_network_acl.intra (expand)"
		"[root] module.vpc.aws_network_acl_rule.intra_outbound (expand)" -> "[root] module.vpc.var.intra_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.outpost_inbound (expand)" -> "[root] module.vpc.aws_network_acl.outpost (expand)"
		"[root] module.vpc.aws_network_acl_rule.outpost_inbound (expand)" -> "[root] module.vpc.var.outpost_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.outpost_outbound (expand)" -> "[root] module.vpc.aws_network_acl.outpost (expand)"
		"[root] module.vpc.aws_network_acl_rule.outpost_outbound (expand)" -> "[root] module.vpc.var.outpost_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.private_inbound (expand)" -> "[root] module.vpc.aws_network_acl.private (expand)"
		"[root] module.vpc.aws_network_acl_rule.private_inbound (expand)" -> "[root] module.vpc.var.private_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.private_outbound (expand)" -> "[root] module.vpc.aws_network_acl.private (expand)"
		"[root] module.vpc.aws_network_acl_rule.private_outbound (expand)" -> "[root] module.vpc.var.private_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.public_inbound (expand)" -> "[root] module.vpc.aws_network_acl.public (expand)"
		"[root] module.vpc.aws_network_acl_rule.public_inbound (expand)" -> "[root] module.vpc.var.public_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.public_outbound (expand)" -> "[root] module.vpc.aws_network_acl.public (expand)"
		"[root] module.vpc.aws_network_acl_rule.public_outbound (expand)" -> "[root] module.vpc.var.public_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.redshift_inbound (expand)" -> "[root] module.vpc.aws_network_acl.redshift (expand)"
		"[root] module.vpc.aws_network_acl_rule.redshift_inbound (expand)" -> "[root] module.vpc.var.redshift_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.redshift_outbound (expand)" -> "[root] module.vpc.aws_network_acl.redshift (expand)"
		"[root] module.vpc.aws_network_acl_rule.redshift_outbound (expand)" -> "[root] module.vpc.var.redshift_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_redshift_subnet_group.redshift (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.aws_redshift_subnet_group.redshift (expand)" -> "[root] module.vpc.var.create_redshift_subnet_group (expand)"
		"[root] module.vpc.aws_redshift_subnet_group.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_group_name (expand)"
		"[root] module.vpc.aws_redshift_subnet_group.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_group_tags (expand)"
		"[root] module.vpc.aws_route.database_internet_gateway (expand)" -> "[root] module.vpc.aws_internet_gateway.this (expand)"
		"[root] module.vpc.aws_route.database_internet_gateway (expand)" -> "[root] module.vpc.aws_route_table.database (expand)"
		"[root] module.vpc.aws_route.database_internet_gateway (expand)" -> "[root] module.vpc.var.create_database_nat_gateway_route (expand)"
		"[root] module.vpc.aws_route.database_ipv6_egress (expand)" -> "[root] module.vpc.aws_egress_only_internet_gateway.this (expand)"
		"[root] module.vpc.aws_route.database_ipv6_egress (expand)" -> "[root] module.vpc.aws_route_table.database (expand)"
		"[root] module.vpc.aws_route.database_nat_gateway (expand)" -> "[root] module.vpc.aws_nat_gateway.this (expand)"
		"[root] module.vpc.aws_route.database_nat_gateway (expand)" -> "[root] module.vpc.aws_route_table.database (expand)"
		"[root] module.vpc.aws_route.database_nat_gateway (expand)" -> "[root] module.vpc.var.create_database_nat_gateway_route (expand)"
		"[root] module.vpc.aws_route.private_ipv6_egress (expand)" -> "[root] module.vpc.aws_egress_only_internet_gateway.this (expand)"
		"[root] module.vpc.aws_route.private_ipv6_egress (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route.private_nat_gateway (expand)" -> "[root] module.vpc.aws_nat_gateway.this (expand)"
		"[root] module.vpc.aws_route.private_nat_gateway (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route.public_internet_gateway (expand)" -> "[root] module.vpc.aws_internet_gateway.this (expand)"
		"[root] module.vpc.aws_route.public_internet_gateway (expand)" -> "[root] module.vpc.aws_route_table.public (expand)"
		"[root] module.vpc.aws_route.public_internet_gateway_ipv6 (expand)" -> "[root] module.vpc.aws_internet_gateway.this (expand)"
		"[root] module.vpc.aws_route.public_internet_gateway_ipv6 (expand)" -> "[root] module.vpc.aws_route_table.public (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.var.create_database_internet_gateway_route (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.var.create_database_subnet_route_table (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.var.database_route_table_tags (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.var.database_subnet_suffix (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.var.database_subnets (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.var.single_nat_gateway (expand)"
		"[root] module.vpc.aws_route_table.elasticache (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_route_table.elasticache (expand)" -> "[root] module.vpc.var.create_elasticache_subnet_route_table (expand)"
		"[root] module.vpc.aws_route_table.elasticache (expand)" -> "[root] module.vpc.var.elasticache_route_table_tags (expand)"
		"[root] module.vpc.aws_route_table.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_suffix (expand)"
		"[root] module.vpc.aws_route_table.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnets (expand)"
		"[root] module.vpc.aws_route_table.intra (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_route_table.intra (expand)" -> "[root] module.vpc.var.intra_route_table_tags (expand)"
		"[root] module.vpc.aws_route_table.intra (expand)" -> "[root] module.vpc.var.intra_subnet_suffix (expand)"
		"[root] module.vpc.aws_route_table.intra (expand)" -> "[root] module.vpc.var.intra_subnets (expand)"
		"[root] module.vpc.aws_route_table.private (expand)" -> "[root] module.vpc.local.nat_gateway_count (expand)"
		"[root] module.vpc.aws_route_table.private (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_route_table.private (expand)" -> "[root] module.vpc.var.private_route_table_tags (expand)"
		"[root] module.vpc.aws_route_table.private (expand)" -> "[root] module.vpc.var.private_subnet_suffix (expand)"
		"[root] module.vpc.aws_route_table.public (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_route_table.public (expand)" -> "[root] module.vpc.var.public_route_table_tags (expand)"
		"[root] module.vpc.aws_route_table.public (expand)" -> "[root] module.vpc.var.public_subnet_suffix (expand)"
		"[root] module.vpc.aws_route_table.public (expand)" -> "[root] module.vpc.var.public_subnets (expand)"
		"[root] module.vpc.aws_route_table.redshift (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_route_table.redshift (expand)" -> "[root] module.vpc.var.create_redshift_subnet_route_table (expand)"
		"[root] module.vpc.aws_route_table.redshift (expand)" -> "[root] module.vpc.var.redshift_route_table_tags (expand)"
		"[root] module.vpc.aws_route_table.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_suffix (expand)"
		"[root] module.vpc.aws_route_table.redshift (expand)" -> "[root] module.vpc.var.redshift_subnets (expand)"
		"[root] module.vpc.aws_route_table_association.database (expand)" -> "[root] module.vpc.aws_route_table.database (expand)"
		"[root] module.vpc.aws_route_table_association.database (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route_table_association.database (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.aws_route_table_association.elasticache (expand)" -> "[root] module.vpc.aws_route_table.elasticache (expand)"
		"[root] module.vpc.aws_route_table_association.elasticache (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route_table_association.elasticache (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.aws_route_table_association.intra (expand)" -> "[root] module.vpc.aws_route_table.intra (expand)"
		"[root] module.vpc.aws_route_table_association.intra (expand)" -> "[root] module.vpc.aws_subnet.intra (expand)"
		"[root] module.vpc.aws_route_table_association.outpost (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route_table_association.outpost (expand)" -> "[root] module.vpc.aws_subnet.outpost (expand)"
		"[root] module.vpc.aws_route_table_association.private (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route_table_association.private (expand)" -> "[root] module.vpc.aws_subnet.private (expand)"
		"[root] module.vpc.aws_route_table_association.public (expand)" -> "[root] module.vpc.aws_route_table.public (expand)"
		"[root] module.vpc.aws_route_table_association.public (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.aws_route_table_association.redshift (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route_table_association.redshift (expand)" -> "[root] module.vpc.aws_route_table.redshift (expand)"
		"[root] module.vpc.aws_route_table_association.redshift (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.aws_route_table_association.redshift (expand)" -> "[root] module.vpc.var.enable_public_redshift (expand)"
		"[root] module.vpc.aws_route_table_association.redshift_public (expand)" -> "[root] module.vpc.aws_route_table.public (expand)"
		"[root] module.vpc.aws_route_table_association.redshift_public (expand)" -> "[root] module.vpc.aws_route_table.redshift (expand)"
		"[root] module.vpc.aws_route_table_association.redshift_public (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.aws_route_table_association.redshift_public (expand)" -> "[root] module.vpc.var.enable_public_redshift (expand)"
		"[root] module.vpc.aws_route_table_association.redshift_public (expand)" -> "[root] module.vpc.var.single_nat_gateway (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.database_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.database_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.database_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.database_subnet_tags (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.database_subnets (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_tags (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnets (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.intra_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.intra_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.intra_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.intra_subnet_tags (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.intra_subnets (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_arn (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_az (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_subnet_tags (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_subnets (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnet_tags (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnets (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.map_public_ip_on_launch (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.one_nat_gateway_per_az (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnet_tags (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnets (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_tags (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.redshift_subnets (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.cidr (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.create_vpc (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.enable_classiclink (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.enable_classiclink_dns_support (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.enable_dns_hostnames (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.enable_dns_support (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.enable_ipv6 (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.instance_tenancy (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.name (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.tags (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.vpc_tags (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.create_vpc (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.dhcp_options_domain_name (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.dhcp_options_domain_name_servers (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.dhcp_options_netbios_name_servers (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.dhcp_options_netbios_node_type (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.dhcp_options_ntp_servers (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.dhcp_options_tags (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.enable_dhcp_options (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.name (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.tags (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.aws_vpc_dhcp_options_association.this (expand)" -> "[root] module.vpc.aws_vpc_dhcp_options.this (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options_association.this (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_vpc_ipv4_cidr_block_association.this (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.aws_vpc_ipv4_cidr_block_association.this (expand)" -> "[root] module.vpc.var.secondary_cidr_blocks (expand)"
		"[root] module.vpc.aws_vpn_gateway.this (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_vpn_gateway.this (expand)" -> "[root] module.vpc.var.amazon_side_asn (expand)"
		"[root] module.vpc.aws_vpn_gateway.this (expand)" -> "[root] module.vpc.var.enable_vpn_gateway (expand)"
		"[root] module.vpc.aws_vpn_gateway.this (expand)" -> "[root] module.vpc.var.vpn_gateway_az (expand)"
		"[root] module.vpc.aws_vpn_gateway.this (expand)" -> "[root] module.vpc.var.vpn_gateway_tags (expand)"
		"[root] module.vpc.aws_vpn_gateway_attachment.this (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_vpn_gateway_attachment.this (expand)" -> "[root] module.vpc.var.vpn_gateway_id (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)" -> "[root] module.vpc.aws_route_table.intra (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)" -> "[root] module.vpc.aws_vpn_gateway.this (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)" -> "[root] module.vpc.aws_vpn_gateway_attachment.this (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)" -> "[root] module.vpc.var.propagate_intra_route_tables_vgw (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)" -> "[root] module.vpc.aws_vpn_gateway.this (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)" -> "[root] module.vpc.aws_vpn_gateway_attachment.this (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)" -> "[root] module.vpc.var.propagate_private_route_tables_vgw (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)" -> "[root] module.vpc.aws_route_table.public (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)" -> "[root] module.vpc.aws_vpn_gateway.this (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)" -> "[root] module.vpc.aws_vpn_gateway_attachment.this (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)" -> "[root] module.vpc.var.propagate_public_route_tables_vgw (expand)"
		"[root] module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role (expand)" -> "[root] module.vpc.local.create_flow_log_cloudwatch_iam_role (expand)"
		"[root] module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.local.create_flow_log_cloudwatch_iam_role (expand)"
		"[root] module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.local.create_flow_log_cloudwatch_iam_role (expand)" -> "[root] module.vpc.local.enable_flow_log (expand)"
		"[root] module.vpc.local.create_flow_log_cloudwatch_iam_role (expand)" -> "[root] module.vpc.var.create_flow_log_cloudwatch_iam_role (expand)"
		"[root] module.vpc.local.create_flow_log_cloudwatch_iam_role (expand)" -> "[root] module.vpc.var.flow_log_destination_type (expand)"
		"[root] module.vpc.local.create_flow_log_cloudwatch_log_group (expand)" -> "[root] module.vpc.local.enable_flow_log (expand)"
		"[root] module.vpc.local.create_flow_log_cloudwatch_log_group (expand)" -> "[root] module.vpc.var.create_flow_log_cloudwatch_log_group (expand)"
		"[root] module.vpc.local.create_flow_log_cloudwatch_log_group (expand)" -> "[root] module.vpc.var.flow_log_destination_type (expand)"
		"[root] module.vpc.local.enable_flow_log (expand)" -> "[root] module.vpc.var.create_vpc (expand)"
		"[root] module.vpc.local.enable_flow_log (expand)" -> "[root] module.vpc.var.enable_flow_log (expand)"
		"[root] module.vpc.local.flow_log_destination_arn (expand)" -> "[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)"
		"[root] module.vpc.local.flow_log_destination_arn (expand)" -> "[root] module.vpc.var.flow_log_destination_arn (expand)"
		"[root] module.vpc.local.flow_log_iam_role_arn (expand)" -> "[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)"
		"[root] module.vpc.local.flow_log_iam_role_arn (expand)" -> "[root] module.vpc.var.flow_log_cloudwatch_iam_role_arn (expand)"
		"[root] module.vpc.local.max_subnet_length (expand)" -> "[root] module.vpc.var.database_subnets (expand)"
		"[root] module.vpc.local.max_subnet_length (expand)" -> "[root] module.vpc.var.elasticache_subnets (expand)"
		"[root] module.vpc.local.max_subnet_length (expand)" -> "[root] module.vpc.var.private_subnets (expand)"
		"[root] module.vpc.local.max_subnet_length (expand)" -> "[root] module.vpc.var.redshift_subnets (expand)"
		"[root] module.vpc.local.nat_gateway_count (expand)" -> "[root] module.vpc.local.max_subnet_length (expand)"
		"[root] module.vpc.local.nat_gateway_count (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.local.nat_gateway_count (expand)" -> "[root] module.vpc.var.one_nat_gateway_per_az (expand)"
		"[root] module.vpc.local.nat_gateway_count (expand)" -> "[root] module.vpc.var.single_nat_gateway (expand)"
		"[root] module.vpc.local.nat_gateway_ips (expand)" -> "[root] module.vpc.aws_eip.nat (expand)"
		"[root] module.vpc.local.nat_gateway_ips (expand)" -> "[root] module.vpc.var.external_nat_ip_ids (expand)"
		"[root] module.vpc.local.vpc_id (expand)" -> "[root] module.vpc.aws_vpc_ipv4_cidr_block_association.this (expand)"
		"[root] module.vpc.output.azs (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.output.cgw_arns (expand)" -> "[root] module.vpc.aws_customer_gateway.this (expand)"
		"[root] module.vpc.output.cgw_ids (expand)" -> "[root] module.vpc.aws_customer_gateway.this (expand)"
		"[root] module.vpc.output.database_internet_gateway_route_id (expand)" -> "[root] module.vpc.aws_route.database_internet_gateway (expand)"
		"[root] module.vpc.output.database_ipv6_egress_route_id (expand)" -> "[root] module.vpc.aws_route.database_ipv6_egress (expand)"
		"[root] module.vpc.output.database_nat_gateway_route_ids (expand)" -> "[root] module.vpc.aws_route.database_nat_gateway (expand)"
		"[root] module.vpc.output.database_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.database (expand)"
		"[root] module.vpc.output.database_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.database (expand)"
		"[root] module.vpc.output.database_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.database (expand)"
		"[root] module.vpc.output.database_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.database (expand)"
		"[root] module.vpc.output.database_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.output.database_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.output.database_subnet_group (expand)" -> "[root] module.vpc.aws_db_subnet_group.database (expand)"
		"[root] module.vpc.output.database_subnet_group_name (expand)" -> "[root] module.vpc.aws_db_subnet_group.database (expand)"
		"[root] module.vpc.output.database_subnets (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.output.database_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.output.database_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.output.default_network_acl_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.default_route_table_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.default_security_group_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_arn (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_cidr_block (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_default_network_acl_id (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_default_route_table_id (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_default_security_group_id (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_enable_dns_hostnames (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_enable_dns_support (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_id (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_instance_tenancy (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_main_route_table_id (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.dhcp_options_id (expand)" -> "[root] module.vpc.aws_vpc_dhcp_options.this (expand)"
		"[root] module.vpc.output.egress_only_internet_gateway_id (expand)" -> "[root] module.vpc.aws_egress_only_internet_gateway.this (expand)"
		"[root] module.vpc.output.elasticache_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.elasticache (expand)"
		"[root] module.vpc.output.elasticache_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.elasticache (expand)"
		"[root] module.vpc.output.elasticache_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.elasticache (expand)"
		"[root] module.vpc.output.elasticache_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.elasticache (expand)"
		"[root] module.vpc.output.elasticache_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.output.elasticache_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.output.elasticache_subnet_group (expand)" -> "[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)"
		"[root] module.vpc.output.elasticache_subnet_group_name (expand)" -> "[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)"
		"[root] module.vpc.output.elasticache_subnets (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.output.elasticache_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.output.elasticache_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.output.igw_arn (expand)" -> "[root] module.vpc.aws_internet_gateway.this (expand)"
		"[root] module.vpc.output.igw_id (expand)" -> "[root] module.vpc.aws_internet_gateway.this (expand)"
		"[root] module.vpc.output.intra_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.intra (expand)"
		"[root] module.vpc.output.intra_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.intra (expand)"
		"[root] module.vpc.output.intra_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.intra (expand)"
		"[root] module.vpc.output.intra_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.intra (expand)"
		"[root] module.vpc.output.intra_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.intra (expand)"
		"[root] module.vpc.output.intra_subnets (expand)" -> "[root] module.vpc.aws_subnet.intra (expand)"
		"[root] module.vpc.output.intra_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.intra (expand)"
		"[root] module.vpc.output.intra_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.intra (expand)"
		"[root] module.vpc.output.name (expand)" -> "[root] module.vpc.var.name (expand)"
		"[root] module.vpc.output.nat_ids (expand)" -> "[root] module.vpc.aws_eip.nat (expand)"
		"[root] module.vpc.output.nat_public_ips (expand)" -> "[root] module.vpc.aws_eip.nat (expand)"
		"[root] module.vpc.output.nat_public_ips (expand)" -> "[root] module.vpc.var.external_nat_ips (expand)"
		"[root] module.vpc.output.natgw_ids (expand)" -> "[root] module.vpc.aws_nat_gateway.this (expand)"
		"[root] module.vpc.output.outpost_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.outpost (expand)"
		"[root] module.vpc.output.outpost_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.outpost (expand)"
		"[root] module.vpc.output.outpost_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.outpost (expand)"
		"[root] module.vpc.output.outpost_subnets (expand)" -> "[root] module.vpc.aws_subnet.outpost (expand)"
		"[root] module.vpc.output.outpost_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.outpost (expand)"
		"[root] module.vpc.output.outpost_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.outpost (expand)"
		"[root] module.vpc.output.private_ipv6_egress_route_ids (expand)" -> "[root] module.vpc.aws_route.private_ipv6_egress (expand)"
		"[root] module.vpc.output.private_nat_gateway_route_ids (expand)" -> "[root] module.vpc.aws_route.private_nat_gateway (expand)"
		"[root] module.vpc.output.private_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.private (expand)"
		"[root] module.vpc.output.private_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.private (expand)"
		"[root] module.vpc.output.private_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.private (expand)"
		"[root] module.vpc.output.private_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.output.private_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.private (expand)"
		"[root] module.vpc.output.private_subnets (expand)" -> "[root] module.vpc.aws_subnet.private (expand)"
		"[root] module.vpc.output.private_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.private (expand)"
		"[root] module.vpc.output.private_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.private (expand)"
		"[root] module.vpc.output.public_internet_gateway_ipv6_route_id (expand)" -> "[root] module.vpc.aws_route.public_internet_gateway_ipv6 (expand)"
		"[root] module.vpc.output.public_internet_gateway_route_id (expand)" -> "[root] module.vpc.aws_route.public_internet_gateway (expand)"
		"[root] module.vpc.output.public_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.public (expand)"
		"[root] module.vpc.output.public_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.public (expand)"
		"[root] module.vpc.output.public_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.public (expand)"
		"[root] module.vpc.output.public_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.public (expand)"
		"[root] module.vpc.output.public_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.output.public_subnets (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.output.public_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.output.public_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.output.redshift_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.redshift (expand)"
		"[root] module.vpc.output.redshift_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.redshift (expand)"
		"[root] module.vpc.output.redshift_public_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.redshift_public (expand)"
		"[root] module.vpc.output.redshift_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.redshift (expand)"
		"[root] module.vpc.output.redshift_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.output.redshift_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.public (expand)"
		"[root] module.vpc.output.redshift_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.redshift (expand)"
		"[root] module.vpc.output.redshift_route_table_ids (expand)" -> "[root] module.vpc.var.enable_public_redshift (expand)"
		"[root] module.vpc.output.redshift_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.output.redshift_subnet_group (expand)" -> "[root] module.vpc.aws_redshift_subnet_group.redshift (expand)"
		"[root] module.vpc.output.redshift_subnets (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.output.redshift_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.output.redshift_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.output.this_customer_gateway (expand)" -> "[root] module.vpc.aws_customer_gateway.this (expand)"
		"[root] module.vpc.output.vgw_arn (expand)" -> "[root] module.vpc.aws_vpn_gateway.this (expand)"
		"[root] module.vpc.output.vgw_id (expand)" -> "[root] module.vpc.aws_vpn_gateway.this (expand)"
		"[root] module.vpc.output.vgw_id (expand)" -> "[root] module.vpc.aws_vpn_gateway_attachment.this (expand)"
		"[root] module.vpc.output.vpc_arn (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_cidr_block (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_enable_dns_hostnames (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_enable_dns_support (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_flow_log_cloudwatch_iam_role_arn (expand)" -> "[root] module.vpc.local.flow_log_iam_role_arn (expand)"
		"[root] module.vpc.output.vpc_flow_log_destination_arn (expand)" -> "[root] module.vpc.local.flow_log_destination_arn (expand)"
		"[root] module.vpc.output.vpc_flow_log_destination_type (expand)" -> "[root] module.vpc.var.flow_log_destination_type (expand)"
		"[root] module.vpc.output.vpc_flow_log_id (expand)" -> "[root] module.vpc.aws_flow_log.this (expand)"
		"[root] module.vpc.output.vpc_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_instance_tenancy (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_ipv6_association_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_ipv6_cidr_block (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_main_route_table_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_owner_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_secondary_cidr_blocks (expand)" -> "[root] module.vpc.aws_vpc_ipv4_cidr_block_association.this (expand)"
		"[root] module.vpc.var.amazon_side_asn (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.azs (expand)" -> "[root] data.aws_availability_zones.available (expand)"
		"[root] module.vpc.var.azs (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.cidr (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.cidr (expand)" -> "[root] var.vpc_cidr"
		"[root] module.vpc.var.create_database_internet_gateway_route (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_database_nat_gateway_route (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_database_subnet_group (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_database_subnet_route_table (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_egress_only_igw (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_elasticache_subnet_group (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_elasticache_subnet_route_table (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_flow_log_cloudwatch_iam_role (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_flow_log_cloudwatch_log_group (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_igw (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_redshift_subnet_group (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_redshift_subnet_route_table (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_vpc (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.customer_gateway_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.customer_gateways (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_group_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_group_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_network_acl_egress (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_network_acl_ingress (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_network_acl_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_network_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_route_table_propagating_vgws (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_route_table_routes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_security_group_egress (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_security_group_ingress (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_security_group_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_security_group_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_vpc_enable_classiclink (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_vpc_enable_dns_hostnames (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_vpc_enable_dns_support (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_vpc_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_vpc_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.dhcp_options_domain_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.dhcp_options_domain_name_servers (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.dhcp_options_netbios_name_servers (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.dhcp_options_netbios_node_type (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.dhcp_options_ntp_servers (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.dhcp_options_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_group_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_group_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_classiclink (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_classiclink_dns_support (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_dhcp_options (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_dns_hostnames (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_dns_support (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_flow_log (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_ipv6 (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_nat_gateway (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_public_redshift (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_vpn_gateway (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.external_nat_ip_ids (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.external_nat_ips (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_cloudwatch_iam_role_arn (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_cloudwatch_log_group_kms_key_id (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_cloudwatch_log_group_name_prefix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_cloudwatch_log_group_retention_in_days (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_destination_arn (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_destination_type (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_file_format (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_hive_compatible_partitions (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_log_format (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_max_aggregation_interval (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_per_hour_partition (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_traffic_type (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.igw_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.instance_tenancy (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.manage_default_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.manage_default_route_table (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.manage_default_security_group (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.manage_default_vpc (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.map_public_ip_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.name (expand)" -> "[root] var.vpc_name"
		"[root] module.vpc.var.nat_eip_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.nat_gateway_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.one_nat_gateway_per_az (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_arn (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_az (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnets (expand)" -> "[root] var.private_subnet1"
		"[root] module.vpc.var.private_subnets (expand)" -> "[root] var.private_subnet2"
		"[root] module.vpc.var.private_subnets (expand)" -> "[root] var.private_subnet3"
		"[root] module.vpc.var.propagate_intra_route_tables_vgw (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.propagate_private_route_tables_vgw (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.propagate_public_route_tables_vgw (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnets (expand)" -> "[root] var.public_subnet1"
		"[root] module.vpc.var.public_subnets (expand)" -> "[root] var.public_subnet2"
		"[root] module.vpc.var.public_subnets (expand)" -> "[root] var.public_subnet3"
		"[root] module.vpc.var.redshift_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_group_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_group_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.reuse_nat_ips (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.secondary_cidr_blocks (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.single_nat_gateway (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.tags (expand)" -> "[root] var.tags"
		"[root] module.vpc.var.vpc_flow_log_permissions_boundary (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpc_flow_log_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpc_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpn_gateway_az (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpn_gateway_id (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpn_gateway_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.wordpress (close)" -> "[root] module.wordpress.aws_security_group_rule.computed_egress_rules (expand)"
		"[root] module.wordpress (close)" -> "[root] module.wordpress.aws_security_group_rule.computed_egress_with_cidr_blocks (expand)"
		"[root] module.wordpress (close)" -> "[root] module.wordpress.aws_security_group_rule.computed_egress_with_ipv6_cidr_blocks (expand)"
		"[root] module.wordpress (close)" -> "[root] module.wordpress.aws_security_group_rule.computed_egress_with_self (expand)"
		"[root] module.wordpress (close)" -> "[root] module.wordpress.aws_security_group_rule.computed_egress_with_source_security_group_id (expand)"
		"[root] module.wordpress (close)" -> "[root] module.wordpress.aws_security_group_rule.computed_ingress_rules (expand)"
		"[root] module.wordpress (close)" -> "[root] module.wordpress.aws_security_group_rule.computed_ingress_with_cidr_blocks (expand)"
		"[root] module.wordpress (close)" -> "[root] module.wordpress.aws_security_group_rule.computed_ingress_with_ipv6_cidr_blocks (expand)"
		"[root] module.wordpress (close)" -> "[root] module.wordpress.aws_security_group_rule.computed_ingress_with_self (expand)"
		"[root] module.wordpress (close)" -> "[root] module.wordpress.aws_security_group_rule.computed_ingress_with_source_security_group_id (expand)"
		"[root] module.wordpress (close)" -> "[root] module.wordpress.aws_security_group_rule.egress_rules (expand)"
		"[root] module.wordpress (close)" -> "[root] module.wordpress.aws_security_group_rule.egress_with_cidr_blocks (expand)"
		"[root] module.wordpress (close)" -> "[root] module.wordpress.aws_security_group_rule.egress_with_ipv6_cidr_blocks (expand)"
		"[root] module.wordpress (close)" -> "[root] module.wordpress.aws_security_group_rule.egress_with_self (expand)"
		"[root] module.wordpress (close)" -> "[root] module.wordpress.aws_security_group_rule.egress_with_source_security_group_id (expand)"
		"[root] module.wordpress (close)" -> "[root] module.wordpress.aws_security_group_rule.ingress_rules (expand)"
		"[root] module.wordpress (close)" -> "[root] module.wordpress.aws_security_group_rule.ingress_with_cidr_blocks (expand)"
		"[root] module.wordpress (close)" -> "[root] module.wordpress.aws_security_group_rule.ingress_with_ipv6_cidr_blocks (expand)"
		"[root] module.wordpress (close)" -> "[root] module.wordpress.aws_security_group_rule.ingress_with_self (expand)"
		"[root] module.wordpress (close)" -> "[root] module.wordpress.aws_security_group_rule.ingress_with_source_security_group_id (expand)"
		"[root] module.wordpress (close)" -> "[root] module.wordpress.output.security_group_description (expand)"
		"[root] module.wordpress (close)" -> "[root] module.wordpress.output.security_group_id (expand)"
		"[root] module.wordpress (close)" -> "[root] module.wordpress.output.security_group_name (expand)"
		"[root] module.wordpress (close)" -> "[root] module.wordpress.output.security_group_owner_id (expand)"
		"[root] module.wordpress (close)" -> "[root] module.wordpress.output.security_group_vpc_id (expand)"
		"[root] module.wordpress (close)" -> "[root] module.wordpress.var.auto_groups (expand)"
		"[root] module.wordpress-asg (close)" -> "[root] module.wordpress-asg.output.autoscaling_group_arn (expand)"
		"[root] module.wordpress-asg (close)" -> "[root] module.wordpress-asg.output.autoscaling_group_availability_zones (expand)"
		"[root] module.wordpress-asg (close)" -> "[root] module.wordpress-asg.output.autoscaling_group_default_cooldown (expand)"
		"[root] module.wordpress-asg (close)" -> "[root] module.wordpress-asg.output.autoscaling_group_desired_capacity (expand)"
		"[root] module.wordpress-asg (close)" -> "[root] module.wordpress-asg.output.autoscaling_group_health_check_grace_period (expand)"
		"[root] module.wordpress-asg (close)" -> "[root] module.wordpress-asg.output.autoscaling_group_health_check_type (expand)"
		"[root] module.wordpress-asg (close)" -> "[root] module.wordpress-asg.output.autoscaling_group_id (expand)"
		"[root] module.wordpress-asg (close)" -> "[root] module.wordpress-asg.output.autoscaling_group_load_balancers (expand)"
		"[root] module.wordpress-asg (close)" -> "[root] module.wordpress-asg.output.autoscaling_group_max_size (expand)"
		"[root] module.wordpress-asg (close)" -> "[root] module.wordpress-asg.output.autoscaling_group_min_size (expand)"
		"[root] module.wordpress-asg (close)" -> "[root] module.wordpress-asg.output.autoscaling_group_name (expand)"
		"[root] module.wordpress-asg (close)" -> "[root] module.wordpress-asg.output.autoscaling_group_target_group_arns (expand)"
		"[root] module.wordpress-asg (close)" -> "[root] module.wordpress-asg.output.autoscaling_group_vpc_zone_identifier (expand)"
		"[root] module.wordpress-asg (close)" -> "[root] module.wordpress-asg.output.autoscaling_schedule_arns (expand)"
		"[root] module.wordpress-asg (close)" -> "[root] module.wordpress-asg.output.launch_configuration_arn (expand)"
		"[root] module.wordpress-asg (close)" -> "[root] module.wordpress-asg.output.launch_configuration_id (expand)"
		"[root] module.wordpress-asg (close)" -> "[root] module.wordpress-asg.output.launch_configuration_name (expand)"
		"[root] module.wordpress-asg (close)" -> "[root] module.wordpress-asg.output.launch_template_arn (expand)"
		"[root] module.wordpress-asg (close)" -> "[root] module.wordpress-asg.output.launch_template_id (expand)"
		"[root] module.wordpress-asg (close)" -> "[root] module.wordpress-asg.output.launch_template_latest_version (expand)"
		"[root] module.wordpress-asg.aws_autoscaling_group.this (expand)" -> "[root] module.wordpress-asg.local.launch_configuration (expand)"
		"[root] module.wordpress-asg.aws_autoscaling_group.this (expand)" -> "[root] module.wordpress-asg.local.launch_template (expand)"
		"[root] module.wordpress-asg.aws_autoscaling_group.this (expand)" -> "[root] module.wordpress-asg.local.launch_template_version (expand)"
		"[root] module.wordpress-asg.aws_autoscaling_group.this (expand)" -> "[root] module.wordpress-asg.local.tags (expand)"
		"[root] module.wordpress-asg.aws_autoscaling_group.this (expand)" -> "[root] module.wordpress-asg.var.availability_zone (expand)"
		"[root] module.wordpress-asg.aws_autoscaling_group.this (expand)" -> "[root] module.wordpress-asg.var.capacity_rebalance (expand)"
		"[root] module.wordpress-asg.aws_autoscaling_group.this (expand)" -> "[root] module.wordpress-asg.var.create_asg (expand)"
		"[root] module.wordpress-asg.aws_autoscaling_group.this (expand)" -> "[root] module.wordpress-asg.var.default_cooldown (expand)"
		"[root] module.wordpress-asg.aws_autoscaling_group.this (expand)" -> "[root] module.wordpress-asg.var.delete_timeout (expand)"
		"[root] module.wordpress-asg.aws_autoscaling_group.this (expand)" -> "[root] module.wordpress-asg.var.desired_capacity (expand)"
		"[root] module.wordpress-asg.aws_autoscaling_group.this (expand)" -> "[root] module.wordpress-asg.var.enabled_metrics (expand)"
		"[root] module.wordpress-asg.aws_autoscaling_group.this (expand)" -> "[root] module.wordpress-asg.var.force_delete (expand)"
		"[root] module.wordpress-asg.aws_autoscaling_group.this (expand)" -> "[root] module.wordpress-asg.var.health_check_grace_period (expand)"
		"[root] module.wordpress-asg.aws_autoscaling_group.this (expand)" -> "[root] module.wordpress-asg.var.health_check_type (expand)"
		"[root] module.wordpress-asg.aws_autoscaling_group.this (expand)" -> "[root] module.wordpress-asg.var.initial_lifecycle_hooks (expand)"
		"[root] module.wordpress-asg.aws_autoscaling_group.this (expand)" -> "[root] module.wordpress-asg.var.instance_refresh (expand)"
		"[root] module.wordpress-asg.aws_autoscaling_group.this (expand)" -> "[root] module.wordpress-asg.var.load_balancers (expand)"
		"[root] module.wordpress-asg.aws_autoscaling_group.this (expand)" -> "[root] module.wordpress-asg.var.max_instance_lifetime (expand)"
		"[root] module.wordpress-asg.aws_autoscaling_group.this (expand)" -> "[root] module.wordpress-asg.var.max_size (expand)"
		"[root] module.wordpress-asg.aws_autoscaling_group.this (expand)" -> "[root] module.wordpress-asg.var.metrics_granularity (expand)"
		"[root] module.wordpress-asg.aws_autoscaling_group.this (expand)" -> "[root] module.wordpress-asg.var.min_elb_capacity (expand)"
		"[root] module.wordpress-asg.aws_autoscaling_group.this (expand)" -> "[root] module.wordpress-asg.var.min_size (expand)"
		"[root] module.wordpress-asg.aws_autoscaling_group.this (expand)" -> "[root] module.wordpress-asg.var.mixed_instances_policy (expand)"
		"[root] module.wordpress-asg.aws_autoscaling_group.this (expand)" -> "[root] module.wordpress-asg.var.placement_group (expand)"
		"[root] module.wordpress-asg.aws_autoscaling_group.this (expand)" -> "[root] module.wordpress-asg.var.protect_from_scale_in (expand)"
		"[root] module.wordpress-asg.aws_autoscaling_group.this (expand)" -> "[root] module.wordpress-asg.var.service_linked_role_arn (expand)"
		"[root] module.wordpress-asg.aws_autoscaling_group.this (expand)" -> "[root] module.wordpress-asg.var.suspended_processes (expand)"
		"[root] module.wordpress-asg.aws_autoscaling_group.this (expand)" -> "[root] module.wordpress-asg.var.target_group_arns (expand)"
		"[root] module.wordpress-asg.aws_autoscaling_group.this (expand)" -> "[root] module.wordpress-asg.var.termination_policies (expand)"
		"[root] module.wordpress-asg.aws_autoscaling_group.this (expand)" -> "[root] module.wordpress-asg.var.use_lc (expand)"
		"[root] module.wordpress-asg.aws_autoscaling_group.this (expand)" -> "[root] module.wordpress-asg.var.use_lt (expand)"
		"[root] module.wordpress-asg.aws_autoscaling_group.this (expand)" -> "[root] module.wordpress-asg.var.use_mixed_instances_policy (expand)"
		"[root] module.wordpress-asg.aws_autoscaling_group.this (expand)" -> "[root] module.wordpress-asg.var.use_name_prefix (expand)"
		"[root] module.wordpress-asg.aws_autoscaling_group.this (expand)" -> "[root] module.wordpress-asg.var.vpc_zone_identifier (expand)"
		"[root] module.wordpress-asg.aws_autoscaling_group.this (expand)" -> "[root] module.wordpress-asg.var.wait_for_capacity_timeout (expand)"
		"[root] module.wordpress-asg.aws_autoscaling_group.this (expand)" -> "[root] module.wordpress-asg.var.wait_for_elb_capacity (expand)"
		"[root] module.wordpress-asg.aws_autoscaling_group.this (expand)" -> "[root] module.wordpress-asg.var.warm_pool (expand)"
		"[root] module.wordpress-asg.aws_autoscaling_schedule.this (expand)" -> "[root] module.wordpress-asg.aws_autoscaling_group.this (expand)"
		"[root] module.wordpress-asg.aws_autoscaling_schedule.this (expand)" -> "[root] module.wordpress-asg.var.create_schedule (expand)"
		"[root] module.wordpress-asg.aws_autoscaling_schedule.this (expand)" -> "[root] module.wordpress-asg.var.schedules (expand)"
		"[root] module.wordpress-asg.aws_launch_configuration.this (expand)" -> "[root] module.wordpress-asg.local.lc_name (expand)"
		"[root] module.wordpress-asg.aws_launch_configuration.this (expand)" -> "[root] module.wordpress-asg.var.associate_public_ip_address (expand)"
		"[root] module.wordpress-asg.aws_launch_configuration.this (expand)" -> "[root] module.wordpress-asg.var.create_lc (expand)"
		"[root] module.wordpress-asg.aws_launch_configuration.this (expand)" -> "[root] module.wordpress-asg.var.ebs_block_device (expand)"
		"[root] module.wordpress-asg.aws_launch_configuration.this (expand)" -> "[root] module.wordpress-asg.var.ebs_optimized (expand)"
		"[root] module.wordpress-asg.aws_launch_configuration.this (expand)" -> "[root] module.wordpress-asg.var.enable_monitoring (expand)"
		"[root] module.wordpress-asg.aws_launch_configuration.this (expand)" -> "[root] module.wordpress-asg.var.ephemeral_block_device (expand)"
		"[root] module.wordpress-asg.aws_launch_configuration.this (expand)" -> "[root] module.wordpress-asg.var.iam_instance_profile_name (expand)"
		"[root] module.wordpress-asg.aws_launch_configuration.this (expand)" -> "[root] module.wordpress-asg.var.image_id (expand)"
		"[root] module.wordpress-asg.aws_launch_configuration.this (expand)" -> "[root] module.wordpress-asg.var.instance_type (expand)"
		"[root] module.wordpress-asg.aws_launch_configuration.this (expand)" -> "[root] module.wordpress-asg.var.key_name (expand)"
		"[root] module.wordpress-asg.aws_launch_configuration.this (expand)" -> "[root] module.wordpress-asg.var.lc_use_name_prefix (expand)"
		"[root] module.wordpress-asg.aws_launch_configuration.this (expand)" -> "[root] module.wordpress-asg.var.metadata_options (expand)"
		"[root] module.wordpress-asg.aws_launch_configuration.this (expand)" -> "[root] module.wordpress-asg.var.placement_tenancy (expand)"
		"[root] module.wordpress-asg.aws_launch_configuration.this (expand)" -> "[root] module.wordpress-asg.var.root_block_device (expand)"
		"[root] module.wordpress-asg.aws_launch_configuration.this (expand)" -> "[root] module.wordpress-asg.var.security_groups (expand)"
		"[root] module.wordpress-asg.aws_launch_configuration.this (expand)" -> "[root] module.wordpress-asg.var.spot_price (expand)"
		"[root] module.wordpress-asg.aws_launch_configuration.this (expand)" -> "[root] module.wordpress-asg.var.user_data (expand)"
		"[root] module.wordpress-asg.aws_launch_configuration.this (expand)" -> "[root] module.wordpress-asg.var.user_data_base64 (expand)"
		"[root] module.wordpress-asg.aws_launch_template.this (expand)" -> "[root] module.wordpress-asg.local.lt_name (expand)"
		"[root] module.wordpress-asg.aws_launch_template.this (expand)" -> "[root] module.wordpress-asg.var.block_device_mappings (expand)"
		"[root] module.wordpress-asg.aws_launch_template.this (expand)" -> "[root] module.wordpress-asg.var.capacity_reservation_specification (expand)"
		"[root] module.wordpress-asg.aws_launch_template.this (expand)" -> "[root] module.wordpress-asg.var.cpu_options (expand)"
		"[root] module.wordpress-asg.aws_launch_template.this (expand)" -> "[root] module.wordpress-asg.var.create_lt (expand)"
		"[root] module.wordpress-asg.aws_launch_template.this (expand)" -> "[root] module.wordpress-asg.var.credit_specification (expand)"
		"[root] module.wordpress-asg.aws_launch_template.this (expand)" -> "[root] module.wordpress-asg.var.default_version (expand)"
		"[root] module.wordpress-asg.aws_launch_template.this (expand)" -> "[root] module.wordpress-asg.var.description (expand)"
		"[root] module.wordpress-asg.aws_launch_template.this (expand)" -> "[root] module.wordpress-asg.var.disable_api_termination (expand)"
		"[root] module.wordpress-asg.aws_launch_template.this (expand)" -> "[root] module.wordpress-asg.var.ebs_optimized (expand)"
		"[root] module.wordpress-asg.aws_launch_template.this (expand)" -> "[root] module.wordpress-asg.var.elastic_gpu_specifications (expand)"
		"[root] module.wordpress-asg.aws_launch_template.this (expand)" -> "[root] module.wordpress-asg.var.elastic_inference_accelerator (expand)"
		"[root] module.wordpress-asg.aws_launch_template.this (expand)" -> "[root] module.wordpress-asg.var.enable_monitoring (expand)"
		"[root] module.wordpress-asg.aws_launch_template.this (expand)" -> "[root] module.wordpress-asg.var.enclave_options (expand)"
		"[root] module.wordpress-asg.aws_launch_template.this (expand)" -> "[root] module.wordpress-asg.var.hibernation_options (expand)"
		"[root] module.wordpress-asg.aws_launch_template.this (expand)" -> "[root] module.wordpress-asg.var.iam_instance_profile_arn (expand)"
		"[root] module.wordpress-asg.aws_launch_template.this (expand)" -> "[root] module.wordpress-asg.var.iam_instance_profile_name (expand)"
		"[root] module.wordpress-asg.aws_launch_template.this (expand)" -> "[root] module.wordpress-asg.var.image_id (expand)"
		"[root] module.wordpress-asg.aws_launch_template.this (expand)" -> "[root] module.wordpress-asg.var.instance_initiated_shutdown_behavior (expand)"
		"[root] module.wordpress-asg.aws_launch_template.this (expand)" -> "[root] module.wordpress-asg.var.instance_market_options (expand)"
		"[root] module.wordpress-asg.aws_launch_template.this (expand)" -> "[root] module.wordpress-asg.var.instance_type (expand)"
		"[root] module.wordpress-asg.aws_launch_template.this (expand)" -> "[root] module.wordpress-asg.var.kernel_id (expand)"
		"[root] module.wordpress-asg.aws_launch_template.this (expand)" -> "[root] module.wordpress-asg.var.key_name (expand)"
		"[root] module.wordpress-asg.aws_launch_template.this (expand)" -> "[root] module.wordpress-asg.var.license_specifications (expand)"
		"[root] module.wordpress-asg.aws_launch_template.this (expand)" -> "[root] module.wordpress-asg.var.lt_use_name_prefix (expand)"
		"[root] module.wordpress-asg.aws_launch_template.this (expand)" -> "[root] module.wordpress-asg.var.metadata_options (expand)"
		"[root] module.wordpress-asg.aws_launch_template.this (expand)" -> "[root] module.wordpress-asg.var.network_interfaces (expand)"
		"[root] module.wordpress-asg.aws_launch_template.this (expand)" -> "[root] module.wordpress-asg.var.placement (expand)"
		"[root] module.wordpress-asg.aws_launch_template.this (expand)" -> "[root] module.wordpress-asg.var.ram_disk_id (expand)"
		"[root] module.wordpress-asg.aws_launch_template.this (expand)" -> "[root] module.wordpress-asg.var.security_groups (expand)"
		"[root] module.wordpress-asg.aws_launch_template.this (expand)" -> "[root] module.wordpress-asg.var.tag_specifications (expand)"
		"[root] module.wordpress-asg.aws_launch_template.this (expand)" -> "[root] module.wordpress-asg.var.tags_as_map (expand)"
		"[root] module.wordpress-asg.aws_launch_template.this (expand)" -> "[root] module.wordpress-asg.var.update_default_version (expand)"
		"[root] module.wordpress-asg.aws_launch_template.this (expand)" -> "[root] module.wordpress-asg.var.user_data_base64 (expand)"
		"[root] module.wordpress-asg.local.launch_configuration (expand)" -> "[root] module.wordpress-asg.aws_launch_configuration.this (expand)"
		"[root] module.wordpress-asg.local.launch_configuration (expand)" -> "[root] module.wordpress-asg.var.launch_configuration (expand)"
		"[root] module.wordpress-asg.local.launch_template (expand)" -> "[root] module.wordpress-asg.aws_launch_template.this (expand)"
		"[root] module.wordpress-asg.local.launch_template (expand)" -> "[root] module.wordpress-asg.var.launch_template (expand)"
		"[root] module.wordpress-asg.local.launch_template_version (expand)" -> "[root] module.wordpress-asg.aws_launch_template.this (expand)"
		"[root] module.wordpress-asg.local.launch_template_version (expand)" -> "[root] module.wordpress-asg.var.lt_version (expand)"
		"[root] module.wordpress-asg.local.lc_name (expand)" -> "[root] module.wordpress-asg.var.lc_name (expand)"
		"[root] module.wordpress-asg.local.lc_name (expand)" -> "[root] module.wordpress-asg.var.name (expand)"
		"[root] module.wordpress-asg.local.lt_name (expand)" -> "[root] module.wordpress-asg.var.lt_name (expand)"
		"[root] module.wordpress-asg.local.lt_name (expand)" -> "[root] module.wordpress-asg.var.name (expand)"
		"[root] module.wordpress-asg.local.tags (expand)" -> "[root] module.wordpress-asg.null_resource.tags_as_list_of_maps (expand)"
		"[root] module.wordpress-asg.local.tags (expand)" -> "[root] module.wordpress-asg.var.name (expand)"
		"[root] module.wordpress-asg.local.tags (expand)" -> "[root] module.wordpress-asg.var.propagate_name (expand)"
		"[root] module.wordpress-asg.local.tags (expand)" -> "[root] module.wordpress-asg.var.tags (expand)"
		"[root] module.wordpress-asg.null_resource.tags_as_list_of_maps (expand)" -> "[root] module.wordpress-asg.var.tags_as_map (expand)"
		"[root] module.wordpress-asg.null_resource.tags_as_list_of_maps (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/null\"]"
		"[root] module.wordpress-asg.output.autoscaling_group_arn (expand)" -> "[root] module.wordpress-asg.aws_autoscaling_group.this (expand)"
		"[root] module.wordpress-asg.output.autoscaling_group_availability_zones (expand)" -> "[root] module.wordpress-asg.aws_autoscaling_group.this (expand)"
		"[root] module.wordpress-asg.output.autoscaling_group_default_cooldown (expand)" -> "[root] module.wordpress-asg.aws_autoscaling_group.this (expand)"
		"[root] module.wordpress-asg.output.autoscaling_group_desired_capacity (expand)" -> "[root] module.wordpress-asg.aws_autoscaling_group.this (expand)"
		"[root] module.wordpress-asg.output.autoscaling_group_health_check_grace_period (expand)" -> "[root] module.wordpress-asg.aws_autoscaling_group.this (expand)"
		"[root] module.wordpress-asg.output.autoscaling_group_health_check_type (expand)" -> "[root] module.wordpress-asg.aws_autoscaling_group.this (expand)"
		"[root] module.wordpress-asg.output.autoscaling_group_id (expand)" -> "[root] module.wordpress-asg.aws_autoscaling_group.this (expand)"
		"[root] module.wordpress-asg.output.autoscaling_group_load_balancers (expand)" -> "[root] module.wordpress-asg.aws_autoscaling_group.this (expand)"
		"[root] module.wordpress-asg.output.autoscaling_group_max_size (expand)" -> "[root] module.wordpress-asg.aws_autoscaling_group.this (expand)"
		"[root] module.wordpress-asg.output.autoscaling_group_min_size (expand)" -> "[root] module.wordpress-asg.aws_autoscaling_group.this (expand)"
		"[root] module.wordpress-asg.output.autoscaling_group_name (expand)" -> "[root] module.wordpress-asg.aws_autoscaling_group.this (expand)"
		"[root] module.wordpress-asg.output.autoscaling_group_target_group_arns (expand)" -> "[root] module.wordpress-asg.aws_autoscaling_group.this (expand)"
		"[root] module.wordpress-asg.output.autoscaling_group_vpc_zone_identifier (expand)" -> "[root] module.wordpress-asg.aws_autoscaling_group.this (expand)"
		"[root] module.wordpress-asg.output.autoscaling_schedule_arns (expand)" -> "[root] module.wordpress-asg.aws_autoscaling_schedule.this (expand)"
		"[root] module.wordpress-asg.output.launch_configuration_arn (expand)" -> "[root] module.wordpress-asg.aws_launch_configuration.this (expand)"
		"[root] module.wordpress-asg.output.launch_configuration_id (expand)" -> "[root] module.wordpress-asg.aws_launch_configuration.this (expand)"
		"[root] module.wordpress-asg.output.launch_configuration_name (expand)" -> "[root] module.wordpress-asg.aws_launch_configuration.this (expand)"
		"[root] module.wordpress-asg.output.launch_template_arn (expand)" -> "[root] module.wordpress-asg.aws_launch_template.this (expand)"
		"[root] module.wordpress-asg.output.launch_template_id (expand)" -> "[root] module.wordpress-asg.aws_launch_template.this (expand)"
		"[root] module.wordpress-asg.output.launch_template_latest_version (expand)" -> "[root] module.wordpress-asg.aws_launch_template.this (expand)"
		"[root] module.wordpress-asg.var.associate_public_ip_address (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.availability_zone (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.block_device_mappings (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.capacity_rebalance (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.capacity_reservation_specification (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.cpu_options (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.create_asg (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.create_lc (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.create_lt (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.create_schedule (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.credit_specification (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.default_cooldown (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.default_version (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.delete_timeout (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.description (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.desired_capacity (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.disable_api_termination (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.ebs_block_device (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.ebs_optimized (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.elastic_gpu_specifications (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.elastic_inference_accelerator (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.enable_monitoring (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.enabled_metrics (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.enclave_options (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.ephemeral_block_device (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.force_delete (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.health_check_grace_period (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.health_check_type (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.hibernation_options (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.iam_instance_profile_arn (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.iam_instance_profile_name (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.image_id (expand)" -> "[root] data.aws_ami.amazon (expand)"
		"[root] module.wordpress-asg.var.image_id (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.initial_lifecycle_hooks (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.instance_initiated_shutdown_behavior (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.instance_market_options (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.instance_refresh (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.instance_type (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.kernel_id (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.key_name (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.launch_configuration (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.launch_template (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.lc_name (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.lc_use_name_prefix (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.license_specifications (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.load_balancers (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.lt_name (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.lt_use_name_prefix (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.lt_version (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.max_instance_lifetime (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.max_size (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.metadata_options (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.metrics_granularity (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.min_elb_capacity (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.min_size (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.mixed_instances_policy (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.name (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.network_interfaces (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.network_interfaces (expand)" -> "[root] module.wordpress.output.security_group_id (expand)"
		"[root] module.wordpress-asg.var.placement (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.placement_group (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.placement_tenancy (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.propagate_name (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.protect_from_scale_in (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.ram_disk_id (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.root_block_device (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.schedules (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.security_groups (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.service_linked_role_arn (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.spot_price (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.suspended_processes (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.tag_specifications (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.tags (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.tags_as_map (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.tags_as_map (expand)" -> "[root] var.tags"
		"[root] module.wordpress-asg.var.target_group_arns (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.termination_policies (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.update_default_version (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.use_lc (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.use_lt (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.use_mixed_instances_policy (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.use_name_prefix (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.user_data (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.user_data_base64 (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.vpc_zone_identifier (expand)" -> "[root] module.vpc.output.public_subnets (expand)"
		"[root] module.wordpress-asg.var.vpc_zone_identifier (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.wait_for_capacity_timeout (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.wait_for_elb_capacity (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress-asg.var.warm_pool (expand)" -> "[root] module.wordpress-asg (expand)"
		"[root] module.wordpress.aws_security_group.this (expand)" -> "[root] module.wordpress.var.create (expand)"
		"[root] module.wordpress.aws_security_group.this (expand)" -> "[root] module.wordpress.var.create_sg (expand)"
		"[root] module.wordpress.aws_security_group.this (expand)" -> "[root] module.wordpress.var.create_timeout (expand)"
		"[root] module.wordpress.aws_security_group.this (expand)" -> "[root] module.wordpress.var.delete_timeout (expand)"
		"[root] module.wordpress.aws_security_group.this (expand)" -> "[root] module.wordpress.var.description (expand)"
		"[root] module.wordpress.aws_security_group.this (expand)" -> "[root] module.wordpress.var.name (expand)"
		"[root] module.wordpress.aws_security_group.this (expand)" -> "[root] module.wordpress.var.revoke_rules_on_delete (expand)"
		"[root] module.wordpress.aws_security_group.this (expand)" -> "[root] module.wordpress.var.tags (expand)"
		"[root] module.wordpress.aws_security_group.this (expand)" -> "[root] module.wordpress.var.use_name_prefix (expand)"
		"[root] module.wordpress.aws_security_group.this (expand)" -> "[root] module.wordpress.var.vpc_id (expand)"
		"[root] module.wordpress.aws_security_group.this_name_prefix (expand)" -> "[root] module.wordpress.var.create (expand)"
		"[root] module.wordpress.aws_security_group.this_name_prefix (expand)" -> "[root] module.wordpress.var.create_sg (expand)"
		"[root] module.wordpress.aws_security_group.this_name_prefix (expand)" -> "[root] module.wordpress.var.create_timeout (expand)"
		"[root] module.wordpress.aws_security_group.this_name_prefix (expand)" -> "[root] module.wordpress.var.delete_timeout (expand)"
		"[root] module.wordpress.aws_security_group.this_name_prefix (expand)" -> "[root] module.wordpress.var.description (expand)"
		"[root] module.wordpress.aws_security_group.this_name_prefix (expand)" -> "[root] module.wordpress.var.name (expand)"
		"[root] module.wordpress.aws_security_group.this_name_prefix (expand)" -> "[root] module.wordpress.var.revoke_rules_on_delete (expand)"
		"[root] module.wordpress.aws_security_group.this_name_prefix (expand)" -> "[root] module.wordpress.var.tags (expand)"
		"[root] module.wordpress.aws_security_group.this_name_prefix (expand)" -> "[root] module.wordpress.var.use_name_prefix (expand)"
		"[root] module.wordpress.aws_security_group.this_name_prefix (expand)" -> "[root] module.wordpress.var.vpc_id (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_egress_rules (expand)" -> "[root] module.wordpress.local.this_sg_id (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_egress_rules (expand)" -> "[root] module.wordpress.var.computed_egress_rules (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_egress_rules (expand)" -> "[root] module.wordpress.var.egress_cidr_blocks (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_egress_rules (expand)" -> "[root] module.wordpress.var.egress_ipv6_cidr_blocks (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_egress_rules (expand)" -> "[root] module.wordpress.var.egress_prefix_list_ids (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_egress_rules (expand)" -> "[root] module.wordpress.var.number_of_computed_egress_rules (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_egress_rules (expand)" -> "[root] module.wordpress.var.rules (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_egress_with_cidr_blocks (expand)" -> "[root] module.wordpress.local.this_sg_id (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_egress_with_cidr_blocks (expand)" -> "[root] module.wordpress.var.computed_egress_with_cidr_blocks (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_egress_with_cidr_blocks (expand)" -> "[root] module.wordpress.var.egress_cidr_blocks (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_egress_with_cidr_blocks (expand)" -> "[root] module.wordpress.var.egress_prefix_list_ids (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_egress_with_cidr_blocks (expand)" -> "[root] module.wordpress.var.number_of_computed_egress_with_cidr_blocks (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_egress_with_cidr_blocks (expand)" -> "[root] module.wordpress.var.rules (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_egress_with_ipv6_cidr_blocks (expand)" -> "[root] module.wordpress.local.this_sg_id (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_egress_with_ipv6_cidr_blocks (expand)" -> "[root] module.wordpress.var.computed_egress_with_ipv6_cidr_blocks (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_egress_with_ipv6_cidr_blocks (expand)" -> "[root] module.wordpress.var.egress_ipv6_cidr_blocks (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_egress_with_ipv6_cidr_blocks (expand)" -> "[root] module.wordpress.var.egress_prefix_list_ids (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_egress_with_ipv6_cidr_blocks (expand)" -> "[root] module.wordpress.var.number_of_computed_egress_with_ipv6_cidr_blocks (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_egress_with_ipv6_cidr_blocks (expand)" -> "[root] module.wordpress.var.rules (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_egress_with_self (expand)" -> "[root] module.wordpress.local.this_sg_id (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_egress_with_self (expand)" -> "[root] module.wordpress.var.computed_egress_with_self (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_egress_with_self (expand)" -> "[root] module.wordpress.var.egress_prefix_list_ids (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_egress_with_self (expand)" -> "[root] module.wordpress.var.number_of_computed_egress_with_self (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_egress_with_self (expand)" -> "[root] module.wordpress.var.rules (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_egress_with_source_security_group_id (expand)" -> "[root] module.wordpress.local.this_sg_id (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_egress_with_source_security_group_id (expand)" -> "[root] module.wordpress.var.computed_egress_with_source_security_group_id (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_egress_with_source_security_group_id (expand)" -> "[root] module.wordpress.var.egress_prefix_list_ids (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_egress_with_source_security_group_id (expand)" -> "[root] module.wordpress.var.number_of_computed_egress_with_source_security_group_id (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_egress_with_source_security_group_id (expand)" -> "[root] module.wordpress.var.rules (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_ingress_rules (expand)" -> "[root] module.wordpress.local.this_sg_id (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_ingress_rules (expand)" -> "[root] module.wordpress.var.computed_ingress_rules (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_ingress_rules (expand)" -> "[root] module.wordpress.var.ingress_cidr_blocks (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_ingress_rules (expand)" -> "[root] module.wordpress.var.ingress_ipv6_cidr_blocks (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_ingress_rules (expand)" -> "[root] module.wordpress.var.ingress_prefix_list_ids (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_ingress_rules (expand)" -> "[root] module.wordpress.var.number_of_computed_ingress_rules (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_ingress_rules (expand)" -> "[root] module.wordpress.var.rules (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_ingress_with_cidr_blocks (expand)" -> "[root] module.wordpress.local.this_sg_id (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_ingress_with_cidr_blocks (expand)" -> "[root] module.wordpress.var.computed_ingress_with_cidr_blocks (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_ingress_with_cidr_blocks (expand)" -> "[root] module.wordpress.var.ingress_cidr_blocks (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_ingress_with_cidr_blocks (expand)" -> "[root] module.wordpress.var.ingress_prefix_list_ids (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_ingress_with_cidr_blocks (expand)" -> "[root] module.wordpress.var.number_of_computed_ingress_with_cidr_blocks (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_ingress_with_cidr_blocks (expand)" -> "[root] module.wordpress.var.rules (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_ingress_with_ipv6_cidr_blocks (expand)" -> "[root] module.wordpress.local.this_sg_id (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_ingress_with_ipv6_cidr_blocks (expand)" -> "[root] module.wordpress.var.computed_ingress_with_ipv6_cidr_blocks (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_ingress_with_ipv6_cidr_blocks (expand)" -> "[root] module.wordpress.var.ingress_ipv6_cidr_blocks (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_ingress_with_ipv6_cidr_blocks (expand)" -> "[root] module.wordpress.var.ingress_prefix_list_ids (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_ingress_with_ipv6_cidr_blocks (expand)" -> "[root] module.wordpress.var.number_of_computed_ingress_with_ipv6_cidr_blocks (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_ingress_with_ipv6_cidr_blocks (expand)" -> "[root] module.wordpress.var.rules (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_ingress_with_self (expand)" -> "[root] module.wordpress.local.this_sg_id (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_ingress_with_self (expand)" -> "[root] module.wordpress.var.computed_ingress_with_self (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_ingress_with_self (expand)" -> "[root] module.wordpress.var.ingress_prefix_list_ids (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_ingress_with_self (expand)" -> "[root] module.wordpress.var.number_of_computed_ingress_with_self (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_ingress_with_self (expand)" -> "[root] module.wordpress.var.rules (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_ingress_with_source_security_group_id (expand)" -> "[root] module.wordpress.local.this_sg_id (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_ingress_with_source_security_group_id (expand)" -> "[root] module.wordpress.var.computed_ingress_with_source_security_group_id (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_ingress_with_source_security_group_id (expand)" -> "[root] module.wordpress.var.ingress_prefix_list_ids (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_ingress_with_source_security_group_id (expand)" -> "[root] module.wordpress.var.number_of_computed_ingress_with_source_security_group_id (expand)"
		"[root] module.wordpress.aws_security_group_rule.computed_ingress_with_source_security_group_id (expand)" -> "[root] module.wordpress.var.rules (expand)"
		"[root] module.wordpress.aws_security_group_rule.egress_rules (expand)" -> "[root] module.wordpress.local.this_sg_id (expand)"
		"[root] module.wordpress.aws_security_group_rule.egress_rules (expand)" -> "[root] module.wordpress.var.egress_cidr_blocks (expand)"
		"[root] module.wordpress.aws_security_group_rule.egress_rules (expand)" -> "[root] module.wordpress.var.egress_ipv6_cidr_blocks (expand)"
		"[root] module.wordpress.aws_security_group_rule.egress_rules (expand)" -> "[root] module.wordpress.var.egress_prefix_list_ids (expand)"
		"[root] module.wordpress.aws_security_group_rule.egress_rules (expand)" -> "[root] module.wordpress.var.egress_rules (expand)"
		"[root] module.wordpress.aws_security_group_rule.egress_rules (expand)" -> "[root] module.wordpress.var.rules (expand)"
		"[root] module.wordpress.aws_security_group_rule.egress_with_cidr_blocks (expand)" -> "[root] module.wordpress.local.this_sg_id (expand)"
		"[root] module.wordpress.aws_security_group_rule.egress_with_cidr_blocks (expand)" -> "[root] module.wordpress.var.egress_cidr_blocks (expand)"
		"[root] module.wordpress.aws_security_group_rule.egress_with_cidr_blocks (expand)" -> "[root] module.wordpress.var.egress_prefix_list_ids (expand)"
		"[root] module.wordpress.aws_security_group_rule.egress_with_cidr_blocks (expand)" -> "[root] module.wordpress.var.egress_with_cidr_blocks (expand)"
		"[root] module.wordpress.aws_security_group_rule.egress_with_cidr_blocks (expand)" -> "[root] module.wordpress.var.rules (expand)"
		"[root] module.wordpress.aws_security_group_rule.egress_with_ipv6_cidr_blocks (expand)" -> "[root] module.wordpress.local.this_sg_id (expand)"
		"[root] module.wordpress.aws_security_group_rule.egress_with_ipv6_cidr_blocks (expand)" -> "[root] module.wordpress.var.egress_ipv6_cidr_blocks (expand)"
		"[root] module.wordpress.aws_security_group_rule.egress_with_ipv6_cidr_blocks (expand)" -> "[root] module.wordpress.var.egress_prefix_list_ids (expand)"
		"[root] module.wordpress.aws_security_group_rule.egress_with_ipv6_cidr_blocks (expand)" -> "[root] module.wordpress.var.egress_with_ipv6_cidr_blocks (expand)"
		"[root] module.wordpress.aws_security_group_rule.egress_with_ipv6_cidr_blocks (expand)" -> "[root] module.wordpress.var.rules (expand)"
		"[root] module.wordpress.aws_security_group_rule.egress_with_self (expand)" -> "[root] module.wordpress.local.this_sg_id (expand)"
		"[root] module.wordpress.aws_security_group_rule.egress_with_self (expand)" -> "[root] module.wordpress.var.egress_prefix_list_ids (expand)"
		"[root] module.wordpress.aws_security_group_rule.egress_with_self (expand)" -> "[root] module.wordpress.var.egress_with_self (expand)"
		"[root] module.wordpress.aws_security_group_rule.egress_with_self (expand)" -> "[root] module.wordpress.var.rules (expand)"
		"[root] module.wordpress.aws_security_group_rule.egress_with_source_security_group_id (expand)" -> "[root] module.wordpress.local.this_sg_id (expand)"
		"[root] module.wordpress.aws_security_group_rule.egress_with_source_security_group_id (expand)" -> "[root] module.wordpress.var.egress_prefix_list_ids (expand)"
		"[root] module.wordpress.aws_security_group_rule.egress_with_source_security_group_id (expand)" -> "[root] module.wordpress.var.egress_with_source_security_group_id (expand)"
		"[root] module.wordpress.aws_security_group_rule.egress_with_source_security_group_id (expand)" -> "[root] module.wordpress.var.rules (expand)"
		"[root] module.wordpress.aws_security_group_rule.ingress_rules (expand)" -> "[root] module.wordpress.local.this_sg_id (expand)"
		"[root] module.wordpress.aws_security_group_rule.ingress_rules (expand)" -> "[root] module.wordpress.var.ingress_cidr_blocks (expand)"
		"[root] module.wordpress.aws_security_group_rule.ingress_rules (expand)" -> "[root] module.wordpress.var.ingress_ipv6_cidr_blocks (expand)"
		"[root] module.wordpress.aws_security_group_rule.ingress_rules (expand)" -> "[root] module.wordpress.var.ingress_prefix_list_ids (expand)"
		"[root] module.wordpress.aws_security_group_rule.ingress_rules (expand)" -> "[root] module.wordpress.var.ingress_rules (expand)"
		"[root] module.wordpress.aws_security_group_rule.ingress_rules (expand)" -> "[root] module.wordpress.var.rules (expand)"
		"[root] module.wordpress.aws_security_group_rule.ingress_with_cidr_blocks (expand)" -> "[root] module.wordpress.local.this_sg_id (expand)"
		"[root] module.wordpress.aws_security_group_rule.ingress_with_cidr_blocks (expand)" -> "[root] module.wordpress.var.ingress_cidr_blocks (expand)"
		"[root] module.wordpress.aws_security_group_rule.ingress_with_cidr_blocks (expand)" -> "[root] module.wordpress.var.ingress_prefix_list_ids (expand)"
		"[root] module.wordpress.aws_security_group_rule.ingress_with_cidr_blocks (expand)" -> "[root] module.wordpress.var.ingress_with_cidr_blocks (expand)"
		"[root] module.wordpress.aws_security_group_rule.ingress_with_cidr_blocks (expand)" -> "[root] module.wordpress.var.rules (expand)"
		"[root] module.wordpress.aws_security_group_rule.ingress_with_ipv6_cidr_blocks (expand)" -> "[root] module.wordpress.local.this_sg_id (expand)"
		"[root] module.wordpress.aws_security_group_rule.ingress_with_ipv6_cidr_blocks (expand)" -> "[root] module.wordpress.var.ingress_ipv6_cidr_blocks (expand)"
		"[root] module.wordpress.aws_security_group_rule.ingress_with_ipv6_cidr_blocks (expand)" -> "[root] module.wordpress.var.ingress_prefix_list_ids (expand)"
		"[root] module.wordpress.aws_security_group_rule.ingress_with_ipv6_cidr_blocks (expand)" -> "[root] module.wordpress.var.ingress_with_ipv6_cidr_blocks (expand)"
		"[root] module.wordpress.aws_security_group_rule.ingress_with_ipv6_cidr_blocks (expand)" -> "[root] module.wordpress.var.rules (expand)"
		"[root] module.wordpress.aws_security_group_rule.ingress_with_self (expand)" -> "[root] module.wordpress.local.this_sg_id (expand)"
		"[root] module.wordpress.aws_security_group_rule.ingress_with_self (expand)" -> "[root] module.wordpress.var.ingress_prefix_list_ids (expand)"
		"[root] module.wordpress.aws_security_group_rule.ingress_with_self (expand)" -> "[root] module.wordpress.var.ingress_with_self (expand)"
		"[root] module.wordpress.aws_security_group_rule.ingress_with_self (expand)" -> "[root] module.wordpress.var.rules (expand)"
		"[root] module.wordpress.aws_security_group_rule.ingress_with_source_security_group_id (expand)" -> "[root] module.wordpress.local.this_sg_id (expand)"
		"[root] module.wordpress.aws_security_group_rule.ingress_with_source_security_group_id (expand)" -> "[root] module.wordpress.var.ingress_prefix_list_ids (expand)"
		"[root] module.wordpress.aws_security_group_rule.ingress_with_source_security_group_id (expand)" -> "[root] module.wordpress.var.ingress_with_source_security_group_id (expand)"
		"[root] module.wordpress.aws_security_group_rule.ingress_with_source_security_group_id (expand)" -> "[root] module.wordpress.var.rules (expand)"
		"[root] module.wordpress.local.this_sg_id (expand)" -> "[root] module.wordpress.aws_security_group.this (expand)"
		"[root] module.wordpress.local.this_sg_id (expand)" -> "[root] module.wordpress.aws_security_group.this_name_prefix (expand)"
		"[root] module.wordpress.local.this_sg_id (expand)" -> "[root] module.wordpress.var.security_group_id (expand)"
		"[root] module.wordpress.output.security_group_description (expand)" -> "[root] module.wordpress.aws_security_group.this (expand)"
		"[root] module.wordpress.output.security_group_description (expand)" -> "[root] module.wordpress.aws_security_group.this_name_prefix (expand)"
		"[root] module.wordpress.output.security_group_id (expand)" -> "[root] module.wordpress.aws_security_group.this (expand)"
		"[root] module.wordpress.output.security_group_id (expand)" -> "[root] module.wordpress.aws_security_group.this_name_prefix (expand)"
		"[root] module.wordpress.output.security_group_name (expand)" -> "[root] module.wordpress.aws_security_group.this (expand)"
		"[root] module.wordpress.output.security_group_name (expand)" -> "[root] module.wordpress.aws_security_group.this_name_prefix (expand)"
		"[root] module.wordpress.output.security_group_owner_id (expand)" -> "[root] module.wordpress.aws_security_group.this (expand)"
		"[root] module.wordpress.output.security_group_owner_id (expand)" -> "[root] module.wordpress.aws_security_group.this_name_prefix (expand)"
		"[root] module.wordpress.output.security_group_vpc_id (expand)" -> "[root] module.wordpress.aws_security_group.this (expand)"
		"[root] module.wordpress.output.security_group_vpc_id (expand)" -> "[root] module.wordpress.aws_security_group.this_name_prefix (expand)"
		"[root] module.wordpress.var.auto_groups (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.computed_egress_rules (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.computed_egress_with_cidr_blocks (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.computed_egress_with_ipv6_cidr_blocks (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.computed_egress_with_self (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.computed_egress_with_source_security_group_id (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.computed_ingress_rules (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.computed_ingress_with_cidr_blocks (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.computed_ingress_with_ipv6_cidr_blocks (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.computed_ingress_with_self (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.computed_ingress_with_source_security_group_id (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.create (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.create_sg (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.create_timeout (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.delete_timeout (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.description (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.egress_cidr_blocks (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.egress_ipv6_cidr_blocks (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.egress_prefix_list_ids (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.egress_rules (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.egress_with_cidr_blocks (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.egress_with_ipv6_cidr_blocks (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.egress_with_self (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.egress_with_source_security_group_id (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.ingress_cidr_blocks (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.ingress_ipv6_cidr_blocks (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.ingress_prefix_list_ids (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.ingress_rules (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.ingress_with_cidr_blocks (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.ingress_with_ipv6_cidr_blocks (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.ingress_with_self (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.ingress_with_source_security_group_id (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.name (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.number_of_computed_egress_rules (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.number_of_computed_egress_with_cidr_blocks (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.number_of_computed_egress_with_ipv6_cidr_blocks (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.number_of_computed_egress_with_self (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.number_of_computed_egress_with_source_security_group_id (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.number_of_computed_ingress_rules (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.number_of_computed_ingress_with_cidr_blocks (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.number_of_computed_ingress_with_ipv6_cidr_blocks (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.number_of_computed_ingress_with_self (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.number_of_computed_ingress_with_source_security_group_id (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.revoke_rules_on_delete (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.rules (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.security_group_id (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.tags (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.tags (expand)" -> "[root] var.tags"
		"[root] module.wordpress.var.use_name_prefix (expand)" -> "[root] module.wordpress (expand)"
		"[root] module.wordpress.var.vpc_id (expand)" -> "[root] module.vpc.output.vpc_id (expand)"
		"[root] module.wordpress.var.vpc_id (expand)" -> "[root] module.wordpress (expand)"
		"[root] output.ami_id" -> "[root] data.aws_ami.amazon (expand)"
		"[root] output.elb" -> "[root] module.elb_http (close)"
		"[root] output.private_subnets" -> "[root] module.vpc.output.private_subnets (expand)"
		"[root] output.public_subnets" -> "[root] module.vpc.output.public_subnets (expand)"
		"[root] output.reader" -> "[root] module.cluster.output.cluster_reader_endpoint (expand)"
		"[root] output.security_group_id" -> "[root] module.wordpress.output.security_group_id (expand)"
		"[root] output.vpc_id" -> "[root] module.vpc.output.vpc_id (expand)"
		"[root] output.writer" -> "[root] module.cluster.output.cluster_endpoint (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_autoscaling_attachment.asg_attachment_bar (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_route53_record.blog (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_route53_record.reader1 (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_route53_record.writer (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.cluster.aws_appautoscaling_policy.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.cluster.aws_iam_role_policy_attachment.rds_enhanced_monitoring (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.cluster.aws_rds_cluster_endpoint.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.cluster.aws_rds_cluster_role_association.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.cluster.aws_security_group_rule.cidr_ingress (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.cluster.aws_security_group_rule.default_ingress (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.cluster.aws_security_group_rule.egress (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.elb_http.module.elb_attachment.aws_elb_attachment.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.redis.aws_elasticache_replication_group.redis (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.redis.aws_security_group_rule.redis_egress (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.redis.aws_security_group_rule.redis_ingress_cidr_blocks (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.redis.aws_security_group_rule.redis_ingress_self (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_customer_gateway.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_db_subnet_group.database (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_default_network_acl.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_default_route_table.default (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_default_security_group.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_flow_log.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.database_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.database_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.elasticache_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.elasticache_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.intra_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.intra_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.outpost_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.outpost_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.private_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.private_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.public_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.public_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.redshift_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.redshift_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_redshift_subnet_group.redshift (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.database_internet_gateway (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.database_ipv6_egress (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.database_nat_gateway (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.private_ipv6_egress (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.private_nat_gateway (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.public_internet_gateway (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.public_internet_gateway_ipv6 (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.database (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.elasticache (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.intra (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.outpost (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.private (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.public (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.redshift (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.redshift_public (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_vpc_dhcp_options_association.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.wordpress-asg.aws_autoscaling_schedule.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.wordpress.aws_security_group_rule.computed_egress_rules (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.wordpress.aws_security_group_rule.computed_egress_with_cidr_blocks (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.wordpress.aws_security_group_rule.computed_egress_with_ipv6_cidr_blocks (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.wordpress.aws_security_group_rule.computed_egress_with_self (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.wordpress.aws_security_group_rule.computed_egress_with_source_security_group_id (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.wordpress.aws_security_group_rule.computed_ingress_rules (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.wordpress.aws_security_group_rule.computed_ingress_with_cidr_blocks (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.wordpress.aws_security_group_rule.computed_ingress_with_ipv6_cidr_blocks (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.wordpress.aws_security_group_rule.computed_ingress_with_self (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.wordpress.aws_security_group_rule.computed_ingress_with_source_security_group_id (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.wordpress.aws_security_group_rule.egress_rules (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.wordpress.aws_security_group_rule.egress_with_cidr_blocks (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.wordpress.aws_security_group_rule.egress_with_ipv6_cidr_blocks (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.wordpress.aws_security_group_rule.egress_with_self (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.wordpress.aws_security_group_rule.egress_with_source_security_group_id (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.wordpress.aws_security_group_rule.ingress_rules (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.wordpress.aws_security_group_rule.ingress_with_cidr_blocks (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.wordpress.aws_security_group_rule.ingress_with_ipv6_cidr_blocks (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.wordpress.aws_security_group_rule.ingress_with_self (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.wordpress.aws_security_group_rule.ingress_with_source_security_group_id (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"]" -> "[root] var.region"
		"[root] provider[\"registry.terraform.io/hashicorp/null\"] (close)" -> "[root] module.wordpress-asg.null_resource.tags_as_list_of_maps (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/random\"] (close)" -> "[root] module.cluster.random_id.snapshot_identifier (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/random\"] (close)" -> "[root] module.cluster.random_password.master_password (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/random\"] (close)" -> "[root] module.redis.random_id.redis_pg (expand)"
		"[root] root" -> "[root] meta.count-boundary (EachMode fixup)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/null\"] (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/random\"] (close)"
	}
}

